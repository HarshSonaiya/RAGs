Received file: LSTM.pdf and query: What are LSTMs ?
An error occurred while processing RAG pipeline: No GPU found. A GPU is needed for quantization.
Traceback (most recent call last):
  File "D:\Projects\RAGs\backend\server.py", line 25, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\generator.py", line 25, in process_rag_pipeline
    llm = create_pipeline(model_name, tokenizer)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\model.py", line 19, in create_pipeline
    model = load_quantized_model(model_name)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\model.py", line 12, in load_quantized_model
    model = AutoModelForCausalLM.from_pretrained(
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\models\auto\auto_factory.py", line 564, in from_pretrained
    return model_class.from_pretrained(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\modeling_utils.py", line 3398, in from_pretrained
    hf_quantizer.validate_environment(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\quantizers\quantizer_bnb_4bit.py", line 62, in validate_environment
    raise RuntimeError("No GPU found. A GPU is needed for quantization.")
RuntimeError: No GPU found. A GPU is needed for quantization.
Received file: LSTM.pdf and query: What are LSTMs?
An error occurred while processing RAG pipeline: Using `bitsandbytes` 4-bit quantization requires Accelerate: `pip install accelerate`
Traceback (most recent call last):
  File "D:\Projects\RAGs\backend\server.py", line 25, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\generator.py", line 25, in process_rag_pipeline
    llm = create_pipeline(model_name, tokenizer)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\model.py", line 19, in create_pipeline
    model = load_quantized_model(model_name)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\model.py", line 12, in load_quantized_model
    model = AutoModelForCausalLM.from_pretrained(
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\models\auto\auto_factory.py", line 564, in from_pretrained
    return model_class.from_pretrained(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\modeling_utils.py", line 3398, in from_pretrained
    hf_quantizer.validate_environment(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\quantizers\quantizer_bnb_4bit.py", line 64, in validate_environment
    raise ImportError("Using `bitsandbytes` 4-bit quantization requires Accelerate: `pip install accelerate`")
ImportError: Using `bitsandbytes` 4-bit quantization requires Accelerate: `pip install accelerate`
Received file: LSTM.pdf and query: What are LSTMs?

An error occurred while processing RAG pipeline: (MaxRetryError('HTTPSConnectionPool(host=\'cdn-lfs-us-1.huggingface.co\', port=443): Max retries exceeded with url: /repos/d9/3d/d93d0ae44e3930a5eb272129c6a12ccec827e219c3d5ba5474ae9ddf3b4b7647/d0ce3cc66d224a0e6014a1df6b7e56da29f5db52da1866ad0cc07d7583fb7c31?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27model-00005-of-00008.safetensors%3B+filename%3D%22model-00005-of-00008.safetensors%22%3B&Expires=1725950991&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyNTk1MDk5MX19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy11cy0xLmh1Z2dpbmdmYWNlLmNvL3JlcG9zL2Q5LzNkL2Q5M2QwYWU0NGUzOTMwYTVlYjI3MjEyOWM2YTEyY2NlYzgyN2UyMTljM2Q1YmE1NDc0YWU5ZGRmM2I0Yjc2NDcvZDBjZTNjYzY2ZDIyNGEwZTYwMTRhMWRmNmI3ZTU2ZGEyOWY1ZGI1MmRhMTg2NmFkMGNjMDdkNzU4M2ZiN2MzMT9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=FKpXqcQiknCpgRWp8ONmfba195Q-Hnp1wdFzbBYsDGd719lwii2NJYm2ECmzR0BDBxj7It3UtakKGBbxcDWYy-FLkuRg8rE7F-rTRVHfUONh5JWOyEnP9pHUbaddWMsXiowHcaUBojJfd49h~zxIkSakCpFIphIEFIdIYYuM8ch~FAdWLLrOS~tpjydLzV6maeAxiAnq5gYHDT4xCsLb3KbXolYUvuIox6HJ9iSdVfwb4kefQBGPDmhgMWzBOUBvaq4LQ~fNR0x7V~MR7D0A-0B5LXLiJw6PcS3-B8FUk4uglu-D4gbDtitn3WBviEdAGPCHMzrmrEznBq-3~oYn7w__&Key-Pair-Id=K24J24Z295AEI9 (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x000002C3B2A36A20>: Failed to resolve \'cdn-lfs-us-1.huggingface.co\' ([Errno 11001] getaddrinfo failed)"))'), '(Request ID: 36a08e1d-47c9-48eb-b863-95c129f8f3c4)')
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 712, in _error_catcher
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 812, in _raw_read
    data = self._fp_read(amt) if not fp_closed else b""
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 797, in _fp_read
    return self._fp.read(amt) if amt is not None else self._fp.read()
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\http\client.py", line 479, in read
    s = self.fp.read(amt)
        ^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\socket.py", line 707, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\ssl.py", line 1252, in recv_into
    return self.read(nbytes, buffer)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\ssl.py", line 1104, in read
    return self._sslobj.read(len, buffer)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TimeoutError: The read operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\requests\models.py", line 816, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 934, in stream
    data = self.read(amt=amt, decode_content=decode_content)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 877, in read
    data = self._raw_read(amt)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 811, in _raw_read
    with self._error_catcher():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 717, in _error_catcher
    raise ReadTimeoutError(self._pool, None, "Read timed out.") from e  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='cdn-lfs-us-1.huggingface.co', port=443): Read timed out.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 549, in http_get
    for chunk in r.iter_content(chunk_size=DOWNLOAD_CHUNK_SIZE):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\requests\models.py", line 822, in generate
    raise ConnectionError(e)
requests.exceptions.ConnectionError: HTTPSConnectionPool(host='cdn-lfs-us-1.huggingface.co', port=443): Read timed out.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\connection.py", line 203, in _new_conn
    sock = connection.create_connection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\util\connection.py", line 60, in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\socket.py", line 963, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\connectionpool.py", line 790, in urlopen
    response = self._make_request(
               ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\connectionpool.py", line 491, in _make_request
    raise new_e
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\connectionpool.py", line 467, in _make_request
    self._validate_conn(conn)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\connectionpool.py", line 1096, in _validate_conn
    conn.connect()
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\connection.py", line 611, in connect
    self.sock = sock = self._new_conn()
                       ^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\connection.py", line 210, in _new_conn
    raise NameResolutionError(self.host, self, e) from e
urllib3.exceptions.NameResolutionError: <urllib3.connection.HTTPSConnection object at 0x000002C3B2A36A20>: Failed to resolve 'cdn-lfs-us-1.huggingface.co' ([Errno 11001] getaddrinfo failed)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\requests\adapters.py", line 486, in send
    resp = conn.urlopen(
           ^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\connectionpool.py", line 844, in urlopen
    retries = retries.increment(
              ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\util\retry.py", line 515, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='cdn-lfs-us-1.huggingface.co', port=443): Max retries exceeded with url: /repos/d9/3d/d93d0ae44e3930a5eb272129c6a12ccec827e219c3d5ba5474ae9ddf3b4b7647/d0ce3cc66d224a0e6014a1df6b7e56da29f5db52da1866ad0cc07d7583fb7c31?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27model-00005-of-00008.safetensors%3B+filename%3D%22model-00005-of-00008.safetensors%22%3B&Expires=1725950991&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyNTk1MDk5MX19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy11cy0xLmh1Z2dpbmdmYWNlLmNvL3JlcG9zL2Q5LzNkL2Q5M2QwYWU0NGUzOTMwYTVlYjI3MjEyOWM2YTEyY2NlYzgyN2UyMTljM2Q1YmE1NDc0YWU5ZGRmM2I0Yjc2NDcvZDBjZTNjYzY2ZDIyNGEwZTYwMTRhMWRmNmI3ZTU2ZGEyOWY1ZGI1MmRhMTg2NmFkMGNjMDdkNzU4M2ZiN2MzMT9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=FKpXqcQiknCpgRWp8ONmfba195Q-Hnp1wdFzbBYsDGd719lwii2NJYm2ECmzR0BDBxj7It3UtakKGBbxcDWYy-FLkuRg8rE7F-rTRVHfUONh5JWOyEnP9pHUbaddWMsXiowHcaUBojJfd49h~zxIkSakCpFIphIEFIdIYYuM8ch~FAdWLLrOS~tpjydLzV6maeAxiAnq5gYHDT4xCsLb3KbXolYUvuIox6HJ9iSdVfwb4kefQBGPDmhgMWzBOUBvaq4LQ~fNR0x7V~MR7D0A-0B5LXLiJw6PcS3-B8FUk4uglu-D4gbDtitn3WBviEdAGPCHMzrmrEznBq-3~oYn7w__&Key-Pair-Id=K24J24Z295AEI9 (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x000002C3B2A36A20>: Failed to resolve 'cdn-lfs-us-1.huggingface.co' ([Errno 11001] getaddrinfo failed)"))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAGs\backend\server.py", line 25, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\generator.py", line 25, in process_rag_pipeline
    llm = create_pipeline(model_name, tokenizer)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\model.py", line 19, in create_pipeline
    model = load_quantized_model(model_name)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\model.py", line 12, in load_quantized_model
    model = AutoModelForCausalLM.from_pretrained(
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\models\auto\auto_factory.py", line 564, in from_pretrained
    return model_class.from_pretrained(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\modeling_utils.py", line 3715, in from_pretrained
    resolved_archive_file, sharded_metadata = get_checkpoint_shard_files(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\utils\hub.py", line 1079, in get_checkpoint_shard_files
    cached_filename = cached_file(
                      ^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\utils\hub.py", line 402, in cached_file
    resolved_file = hf_hub_download(
                    ^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\utils\_deprecation.py", line 101, in inner_f
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\utils\_validators.py", line 114, in _inner_fn
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 1240, in hf_hub_download
    return _hf_hub_download_to_cache_dir(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 1389, in _hf_hub_download_to_cache_dir
    _download_to_tmp_and_move(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 1915, in _download_to_tmp_and_move
    http_get(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 566, in http_get
    return http_get(
           ^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 463, in http_get
    r = _request_wrapper(
        ^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 399, in _request_wrapper
    response = get_session().request(method=method, url=url, **params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\requests\sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\requests\sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\utils\_http.py", line 66, in send
    return super().send(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\requests\adapters.py", line 519, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: (MaxRetryError('HTTPSConnectionPool(host=\'cdn-lfs-us-1.huggingface.co\', port=443): Max retries exceeded with url: /repos/d9/3d/d93d0ae44e3930a5eb272129c6a12ccec827e219c3d5ba5474ae9ddf3b4b7647/d0ce3cc66d224a0e6014a1df6b7e56da29f5db52da1866ad0cc07d7583fb7c31?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27model-00005-of-00008.safetensors%3B+filename%3D%22model-00005-of-00008.safetensors%22%3B&Expires=1725950991&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyNTk1MDk5MX19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy11cy0xLmh1Z2dpbmdmYWNlLmNvL3JlcG9zL2Q5LzNkL2Q5M2QwYWU0NGUzOTMwYTVlYjI3MjEyOWM2YTEyY2NlYzgyN2UyMTljM2Q1YmE1NDc0YWU5ZGRmM2I0Yjc2NDcvZDBjZTNjYzY2ZDIyNGEwZTYwMTRhMWRmNmI3ZTU2ZGEyOWY1ZGI1MmRhMTg2NmFkMGNjMDdkNzU4M2ZiN2MzMT9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=FKpXqcQiknCpgRWp8ONmfba195Q-Hnp1wdFzbBYsDGd719lwii2NJYm2ECmzR0BDBxj7It3UtakKGBbxcDWYy-FLkuRg8rE7F-rTRVHfUONh5JWOyEnP9pHUbaddWMsXiowHcaUBojJfd49h~zxIkSakCpFIphIEFIdIYYuM8ch~FAdWLLrOS~tpjydLzV6maeAxiAnq5gYHDT4xCsLb3KbXolYUvuIox6HJ9iSdVfwb4kefQBGPDmhgMWzBOUBvaq4LQ~fNR0x7V~MR7D0A-0B5LXLiJw6PcS3-B8FUk4uglu-D4gbDtitn3WBviEdAGPCHMzrmrEznBq-3~oYn7w__&Key-Pair-Id=K24J24Z295AEI9 (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x000002C3B2A36A20>: Failed to resolve \'cdn-lfs-us-1.huggingface.co\' ([Errno 11001] getaddrinfo failed)"))'), '(Request ID: 36a08e1d-47c9-48eb-b863-95c129f8f3c4)')
Received file: LSTM.pdf and query: What are LSTMs?

An error occurred while processing RAG pipeline: (MaxRetryError('HTTPSConnectionPool(host=\'cdn-lfs-us-1.huggingface.co\', port=443): Max retries exceeded with url: /repos/d9/3d/d93d0ae44e3930a5eb272129c6a12ccec827e219c3d5ba5474ae9ddf3b4b7647/b0e0a3c0b992925ff9a60f1234950af0bcc7ce3015c8a386a342489e76f5d09c?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27model-00007-of-00008.safetensors%3B+filename%3D%22model-00007-of-00008.safetensors%22%3B&Expires=1725951476&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyNTk1MTQ3Nn19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy11cy0xLmh1Z2dpbmdmYWNlLmNvL3JlcG9zL2Q5LzNkL2Q5M2QwYWU0NGUzOTMwYTVlYjI3MjEyOWM2YTEyY2NlYzgyN2UyMTljM2Q1YmE1NDc0YWU5ZGRmM2I0Yjc2NDcvYjBlMGEzYzBiOTkyOTI1ZmY5YTYwZjEyMzQ5NTBhZjBiY2M3Y2UzMDE1YzhhMzg2YTM0MjQ4OWU3NmY1ZDA5Yz9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=iwkQzEgFw2lAUuKVeX0VEy6Yk4Au-xWA-ygEA~dMq9fCEB0~dgmfMRT~R0ZFemCGx-8ux8hQQh3jQ3dmXmXCzfKpHIlspBGGn4vjO9Z4noA8iDG-2cjE~ZgEL98jZJcS3jffM3jWgIJbh4TXGxoMiJd7AHvql3YbH1RUNDnaw7O8z2SumazfjX77wu6UlIdikvhpv14GMzfq3jJs~ThHO86Vg1fYHFYkj9WYXOGcRw3XrS5wCm1qOD7aw6YRt0h6ShBLCat8DLBVeKick02DwGgGm4toZZzUCaH4XzliDBNiHAYFYMinTq7dKV1zVbcwGG9bFOw8dXd9G6-kq2YvDw__&Key-Pair-Id=K24J24Z295AEI9 (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x000002C3B2519070>: Failed to resolve \'cdn-lfs-us-1.huggingface.co\' ([Errno 11001] getaddrinfo failed)"))'), '(Request ID: 23b1965e-b27c-4d78-bf7d-136857c23dd4)')
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 712, in _error_catcher
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 812, in _raw_read
    data = self._fp_read(amt) if not fp_closed else b""
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 797, in _fp_read
    return self._fp.read(amt) if amt is not None else self._fp.read()
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\http\client.py", line 479, in read
    s = self.fp.read(amt)
        ^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\socket.py", line 707, in readinto
    return self._sock.recv_into(b)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\ssl.py", line 1252, in recv_into
    return self.read(nbytes, buffer)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\ssl.py", line 1104, in read
    return self._sslobj.read(len, buffer)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TimeoutError: The read operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\requests\models.py", line 816, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 934, in stream
    data = self.read(amt=amt, decode_content=decode_content)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 877, in read
    data = self._raw_read(amt)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 811, in _raw_read
    with self._error_catcher():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 717, in _error_catcher
    raise ReadTimeoutError(self._pool, None, "Read timed out.") from e  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='cdn-lfs-us-1.huggingface.co', port=443): Read timed out.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 549, in http_get
    for chunk in r.iter_content(chunk_size=DOWNLOAD_CHUNK_SIZE):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\requests\models.py", line 822, in generate
    raise ConnectionError(e)
requests.exceptions.ConnectionError: HTTPSConnectionPool(host='cdn-lfs-us-1.huggingface.co', port=443): Read timed out.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\connection.py", line 203, in _new_conn
    sock = connection.create_connection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\util\connection.py", line 60, in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\socket.py", line 963, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\connectionpool.py", line 790, in urlopen
    response = self._make_request(
               ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\connectionpool.py", line 491, in _make_request
    raise new_e
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\connectionpool.py", line 467, in _make_request
    self._validate_conn(conn)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\connectionpool.py", line 1096, in _validate_conn
    conn.connect()
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\connection.py", line 611, in connect
    self.sock = sock = self._new_conn()
                       ^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\connection.py", line 210, in _new_conn
    raise NameResolutionError(self.host, self, e) from e
urllib3.exceptions.NameResolutionError: <urllib3.connection.HTTPSConnection object at 0x000002C3B2519070>: Failed to resolve 'cdn-lfs-us-1.huggingface.co' ([Errno 11001] getaddrinfo failed)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\requests\adapters.py", line 486, in send
    resp = conn.urlopen(
           ^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\connectionpool.py", line 844, in urlopen
    retries = retries.increment(
              ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\util\retry.py", line 515, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='cdn-lfs-us-1.huggingface.co', port=443): Max retries exceeded with url: /repos/d9/3d/d93d0ae44e3930a5eb272129c6a12ccec827e219c3d5ba5474ae9ddf3b4b7647/b0e0a3c0b992925ff9a60f1234950af0bcc7ce3015c8a386a342489e76f5d09c?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27model-00007-of-00008.safetensors%3B+filename%3D%22model-00007-of-00008.safetensors%22%3B&Expires=1725951476&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyNTk1MTQ3Nn19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy11cy0xLmh1Z2dpbmdmYWNlLmNvL3JlcG9zL2Q5LzNkL2Q5M2QwYWU0NGUzOTMwYTVlYjI3MjEyOWM2YTEyY2NlYzgyN2UyMTljM2Q1YmE1NDc0YWU5ZGRmM2I0Yjc2NDcvYjBlMGEzYzBiOTkyOTI1ZmY5YTYwZjEyMzQ5NTBhZjBiY2M3Y2UzMDE1YzhhMzg2YTM0MjQ4OWU3NmY1ZDA5Yz9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=iwkQzEgFw2lAUuKVeX0VEy6Yk4Au-xWA-ygEA~dMq9fCEB0~dgmfMRT~R0ZFemCGx-8ux8hQQh3jQ3dmXmXCzfKpHIlspBGGn4vjO9Z4noA8iDG-2cjE~ZgEL98jZJcS3jffM3jWgIJbh4TXGxoMiJd7AHvql3YbH1RUNDnaw7O8z2SumazfjX77wu6UlIdikvhpv14GMzfq3jJs~ThHO86Vg1fYHFYkj9WYXOGcRw3XrS5wCm1qOD7aw6YRt0h6ShBLCat8DLBVeKick02DwGgGm4toZZzUCaH4XzliDBNiHAYFYMinTq7dKV1zVbcwGG9bFOw8dXd9G6-kq2YvDw__&Key-Pair-Id=K24J24Z295AEI9 (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x000002C3B2519070>: Failed to resolve 'cdn-lfs-us-1.huggingface.co' ([Errno 11001] getaddrinfo failed)"))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAGs\backend\server.py", line 25, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\generator.py", line 25, in process_rag_pipeline
    llm = create_pipeline(model_name, tokenizer)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\model.py", line 19, in create_pipeline
    model = load_quantized_model(model_name)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\model.py", line 12, in load_quantized_model
    model = AutoModelForCausalLM.from_pretrained(
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\models\auto\auto_factory.py", line 564, in from_pretrained
    return model_class.from_pretrained(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\modeling_utils.py", line 3715, in from_pretrained
    resolved_archive_file, sharded_metadata = get_checkpoint_shard_files(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\utils\hub.py", line 1079, in get_checkpoint_shard_files
    cached_filename = cached_file(
                      ^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\utils\hub.py", line 402, in cached_file
    resolved_file = hf_hub_download(
                    ^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\utils\_deprecation.py", line 101, in inner_f
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\utils\_validators.py", line 114, in _inner_fn
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 1240, in hf_hub_download
    return _hf_hub_download_to_cache_dir(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 1389, in _hf_hub_download_to_cache_dir
    _download_to_tmp_and_move(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 1915, in _download_to_tmp_and_move
    http_get(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 566, in http_get
    return http_get(
           ^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 463, in http_get
    r = _request_wrapper(
        ^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 399, in _request_wrapper
    response = get_session().request(method=method, url=url, **params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\requests\sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\requests\sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\utils\_http.py", line 66, in send
    return super().send(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\requests\adapters.py", line 519, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: (MaxRetryError('HTTPSConnectionPool(host=\'cdn-lfs-us-1.huggingface.co\', port=443): Max retries exceeded with url: /repos/d9/3d/d93d0ae44e3930a5eb272129c6a12ccec827e219c3d5ba5474ae9ddf3b4b7647/b0e0a3c0b992925ff9a60f1234950af0bcc7ce3015c8a386a342489e76f5d09c?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27model-00007-of-00008.safetensors%3B+filename%3D%22model-00007-of-00008.safetensors%22%3B&Expires=1725951476&Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyNTk1MTQ3Nn19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy11cy0xLmh1Z2dpbmdmYWNlLmNvL3JlcG9zL2Q5LzNkL2Q5M2QwYWU0NGUzOTMwYTVlYjI3MjEyOWM2YTEyY2NlYzgyN2UyMTljM2Q1YmE1NDc0YWU5ZGRmM2I0Yjc2NDcvYjBlMGEzYzBiOTkyOTI1ZmY5YTYwZjEyMzQ5NTBhZjBiY2M3Y2UzMDE1YzhhMzg2YTM0MjQ4OWU3NmY1ZDA5Yz9yZXNwb25zZS1jb250ZW50LWRpc3Bvc2l0aW9uPSoifV19&Signature=iwkQzEgFw2lAUuKVeX0VEy6Yk4Au-xWA-ygEA~dMq9fCEB0~dgmfMRT~R0ZFemCGx-8ux8hQQh3jQ3dmXmXCzfKpHIlspBGGn4vjO9Z4noA8iDG-2cjE~ZgEL98jZJcS3jffM3jWgIJbh4TXGxoMiJd7AHvql3YbH1RUNDnaw7O8z2SumazfjX77wu6UlIdikvhpv14GMzfq3jJs~ThHO86Vg1fYHFYkj9WYXOGcRw3XrS5wCm1qOD7aw6YRt0h6ShBLCat8DLBVeKick02DwGgGm4toZZzUCaH4XzliDBNiHAYFYMinTq7dKV1zVbcwGG9bFOw8dXd9G6-kq2YvDw__&Key-Pair-Id=K24J24Z295AEI9 (Caused by NameResolutionError("<urllib3.connection.HTTPSConnection object at 0x000002C3B2519070>: Failed to resolve \'cdn-lfs-us-1.huggingface.co\' ([Errno 11001] getaddrinfo failed)"))'), '(Request ID: 23b1965e-b27c-4d78-bf7d-136857c23dd4)')
Received file: LSTM.pdf and query: What are LSTMs?

An error occurred while processing RAG pipeline: ('Connection broken: IncompleteRead(1057980702 bytes read, 324112426 more expected)', IncompleteRead(1057980702 bytes read, 324112426 more expected))
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 712, in _error_catcher
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 833, in _raw_read
    raise IncompleteRead(self._fp_bytes_read, self.length_remaining)
urllib3.exceptions.IncompleteRead: IncompleteRead(1057980702 bytes read, 324112426 more expected)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\requests\models.py", line 816, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 934, in stream
    data = self.read(amt=amt, decode_content=decode_content)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 905, in read
    data = self._raw_read(amt)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 811, in _raw_read
    with self._error_catcher():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 729, in _error_catcher
    raise ProtocolError(f"Connection broken: {e!r}", e) from e
urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(1057980702 bytes read, 324112426 more expected)', IncompleteRead(1057980702 bytes read, 324112426 more expected))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAGs\backend\server.py", line 25, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\generator.py", line 25, in process_rag_pipeline
    llm = create_pipeline(model_name, tokenizer)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\model.py", line 19, in create_pipeline
    model = load_quantized_model(model_name)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\model.py", line 12, in load_quantized_model
    model = AutoModelForCausalLM.from_pretrained(
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\models\auto\auto_factory.py", line 564, in from_pretrained
    return model_class.from_pretrained(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\modeling_utils.py", line 3715, in from_pretrained
    resolved_archive_file, sharded_metadata = get_checkpoint_shard_files(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\utils\hub.py", line 1079, in get_checkpoint_shard_files
    cached_filename = cached_file(
                      ^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\utils\hub.py", line 402, in cached_file
    resolved_file = hf_hub_download(
                    ^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\utils\_deprecation.py", line 101, in inner_f
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\utils\_validators.py", line 114, in _inner_fn
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 1240, in hf_hub_download
    return _hf_hub_download_to_cache_dir(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 1389, in _hf_hub_download_to_cache_dir
    _download_to_tmp_and_move(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 1915, in _download_to_tmp_and_move
    http_get(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 549, in http_get
    for chunk in r.iter_content(chunk_size=DOWNLOAD_CHUNK_SIZE):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\requests\models.py", line 818, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(1057980702 bytes read, 324112426 more expected)', IncompleteRead(1057980702 bytes read, 324112426 more expected))
Received file: LSTM.pdf and query: What are LSTMs?

An error occurred while processing RAG pipeline: `.to` is not supported for `4-bit` or `8-bit` bitsandbytes models. Please use the model as it is, since the model has already been set to the correct devices and casted to the correct `dtype`.
Traceback (most recent call last):
  File "D:\Projects\RAGs\backend\server.py", line 25, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\generator.py", line 25, in process_rag_pipeline
    llm = create_pipeline(model_name, tokenizer)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\model.py", line 19, in create_pipeline
    model = load_quantized_model(model_name)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\model.py", line 15, in load_quantized_model
    ).to("cuda")  # Load model on GPU
      ^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\accelerate\big_modeling.py", line 457, in wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\modeling_utils.py", line 2883, in to
    raise ValueError(
ValueError: `.to` is not supported for `4-bit` or `8-bit` bitsandbytes models. Please use the model as it is, since the model has already been set to the correct devices and casted to the correct `dtype`.
Received file: LSTM.pdf and query: What are LSTMs ?
An error occurred while processing RAG pipeline: BaseModel.__init__() takes 1 positional argument but 2 were given
Traceback (most recent call last):
  File "D:\Projects\RAGs\backend\server.py", line 25, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\generator.py", line 29, in process_rag_pipeline
    vectorstore_retriever, ensemble_retriever, bm25_retriever = setup_retrievers(docs, embedding_model_name)
                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAGs\rag_pipeline\rag_hybrid\retriever.py", line 20, in setup_retrievers
    bm25_retriever = BM25Retriever(docs_content)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\load\serializable.py", line 113, in __init__
    super().__init__(*args, **kwargs)
TypeError: BaseModel.__init__() takes 1 positional argument but 2 were given
Received file: LSTM.pdf and query: What are LSTMs ?
RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: What are Lstms ?

Received file: LSTM.pdf and query: What are lstms?

RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: What are lstms?

RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: What are lstms?

RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: What are lstms?

Received file: LSTM.pdf and query: What are lstms?

RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: Lstms ?
An error occurred while processing RAG pipeline: ('Connection broken: IncompleteRead(609231011 bytes read, 1280356029 more expected)', IncompleteRead(609231011 bytes read, 1280356029 more expected))
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 712, in _error_catcher
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 833, in _raw_read
    raise IncompleteRead(self._fp_bytes_read, self.length_remaining)
urllib3.exceptions.IncompleteRead: IncompleteRead(609231011 bytes read, 1280356029 more expected)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\requests\models.py", line 820, in generate
    yield from self.raw.stream(chunk_size, decode_content=True)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 934, in stream
    data = self.read(amt=amt, decode_content=decode_content)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 905, in read
    data = self._raw_read(amt)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 811, in _raw_read
    with self._error_catcher():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\urllib3\response.py", line 729, in _error_catcher
    raise ProtocolError(f"Connection broken: {e!r}", e) from e
urllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(609231011 bytes read, 1280356029 more expected)', IncompleteRead(609231011 bytes read, 1280356029 more expected))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\rag_hybrid\generator.py", line 26, in process_rag_pipeline
    llm = create_pipeline(model_name, tokenizer)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\rag_hybrid\model.py", line 19, in create_pipeline
    model = load_quantized_model(model_name)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\rag_hybrid\model.py", line 12, in load_quantized_model
    model = AutoModelForCausalLM.from_pretrained(
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\models\auto\auto_factory.py", line 564, in from_pretrained
    return model_class.from_pretrained(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\modeling_utils.py", line 3715, in from_pretrained
    resolved_archive_file, sharded_metadata = get_checkpoint_shard_files(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\utils\hub.py", line 1079, in get_checkpoint_shard_files
    cached_filename = cached_file(
                      ^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\transformers\utils\hub.py", line 402, in cached_file
    resolved_file = hf_hub_download(
                    ^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\utils\_deprecation.py", line 101, in inner_f
    return f(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\utils\_validators.py", line 114, in _inner_fn
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 1240, in hf_hub_download
    return _hf_hub_download_to_cache_dir(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 1389, in _hf_hub_download_to_cache_dir
    _download_to_tmp_and_move(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 1915, in _download_to_tmp_and_move
    http_get(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\huggingface_hub\file_download.py", line 549, in http_get
    for chunk in r.iter_content(chunk_size=DOWNLOAD_CHUNK_SIZE):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\requests\models.py", line 822, in generate
    raise ChunkedEncodingError(e)
requests.exceptions.ChunkedEncodingError: ('Connection broken: IncompleteRead(609231011 bytes read, 1280356029 more expected)', IncompleteRead(609231011 bytes read, 1280356029 more expected))
Received file: LSTM.pdf and query: Lstms ?
RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: Lstms ?
An error occurred while processing RAG pipeline: object dict can't be used in 'await' expression
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\rag_hybrid\generator.py", line 52, in process_rag_pipeline
    response4 = await evaluation(llm, embedding_model_name, docs, [normal_chain, hybrid_chain, bm25_chain] )
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\evaluator.py", line 53, in evaluation
    response = await chain.invoke(question)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: object dict can't be used in 'await' expression
Received file: LSTM.pdf and query: Lstms ?
An error occurred while processing RAG pipeline: 'RetrievalQA' object has no attribute 'get_relevant_documents'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\rag_hybrid\generator.py", line 52, in process_rag_pipeline
    response4 = await evaluation(llm, embedding_model_name, docs, hybrid_chain )
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\evaluator.py", line 62, in evaluation
    contexts.append([docs.page_content for docs in chains.get_relevant_documents(question)])
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RetrievalQA' object has no attribute 'get_relevant_documents'
Received file: LSTM.pdf and query: lstms ?
Received file: LSTM.pdf and query: Lstms ?
Received file: LSTM.pdf and query: LSTMS ?
An error occurred while processing RAG pipeline: 'dict' object has no attribute 'dtype'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\rag_hybrid\generator.py", line 99, in process_rag_pipeline
    result = evaluate(
             ^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\ragas\_analytics.py", line 129, in wrapper
    result = func(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\ragas\evaluation.py", line 165, in evaluate
    validate_column_dtypes(dataset)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\ragas\validation.py", line 45, in validate_column_dtypes
    if ds.features[column_names].dtype != "string":
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'dict' object has no attribute 'dtype'
Received file: LSTM.pdf and query: Lstms ?
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Could not import 'fastembed' Python package. Please install it with `pip install fastembed`.
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\embeddings\fastembed.py", line 82, in validate_environment
    fastembed = importlib.import_module("fastembed")
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\importlib\__init__.py", line 90, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1387, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1360, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1324, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'fastembed'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 27, in process_rag_pipeline
    embeddings = FastEmbedEmbeddings()
                 ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\v1\main.py", line 339, in __init__
    values, fields_set, validation_error = validate_model(__pydantic_self__.__class__, data)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\v1\main.py", line 1048, in validate_model
    input_data = validator(cls_, input_data)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\utils\pydantic.py", line 167, in wrapper
    return func(cls, values)
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\embeddings\fastembed.py", line 85, in validate_environment
    raise ImportError(
ImportError: Could not import 'fastembed' Python package. Please install it with `pip install fastembed`.
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: [WinError 10061] No connection could be made because the target machine actively refused it
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 72, in map_httpcore_exceptions
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 236, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 216, in handle_request
    raise exc from None
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 196, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 99, in handle_request
    raise exc
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 76, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 122, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_backends\sync.py", line 205, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 106, in send_inner
    response = self._client.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 926, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 954, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 991, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 1027, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 235, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 89, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 29, in process_rag_pipeline
    vectorstore = Qdrant.from_documents(documents=documents,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 835, in from_documents
    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1337, in from_texts
    qdrant = cls.construct_instance(
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1665, in construct_instance
    collection_info = client.get_collection(collection_name=collection_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1944, in get_collection
    return self._client.get_collection(collection_name=collection_name, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2436, in get_collection
    result: Optional[types.CollectionInfo] = self.http.collections_api.get_collection(
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 1314, in get_collection
    return self._build_for_get_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 397, in _build_for_get_collection
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 96, in send
    response = self.middleware(request, self.send_inner)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 205, in __call__
    return call_next(request)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 108, in send_inner
    raise ResponseHandlingException(e)
qdrant_client.http.exceptions.ResponseHandlingException: [WinError 10061] No connection could be made because the target machine actively refused it
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: [WinError 10061] No connection could be made because the target machine actively refused it
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 72, in map_httpcore_exceptions
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 236, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 216, in handle_request
    raise exc from None
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 196, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 99, in handle_request
    raise exc
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 76, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 122, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_backends\sync.py", line 205, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 106, in send_inner
    response = self._client.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 926, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 954, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 991, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 1027, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 235, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 89, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 29, in process_rag_pipeline
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 835, in from_documents
    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1337, in from_texts
    qdrant = cls.construct_instance(
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1665, in construct_instance
    collection_info = client.get_collection(collection_name=collection_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1944, in get_collection
    return self._client.get_collection(collection_name=collection_name, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2436, in get_collection
    result: Optional[types.CollectionInfo] = self.http.collections_api.get_collection(
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 1314, in get_collection
    return self._build_for_get_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 397, in _build_for_get_collection
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 96, in send
    response = self.middleware(request, self.send_inner)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 205, in __call__
    return call_next(request)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 108, in send_inner
    raise ResponseHandlingException(e)
qdrant_client.http.exceptions.ResponseHandlingException: [WinError 10061] No connection could be made because the target machine actively refused it
Received file: LSTM.pdf and query: LSTMs ?
An error occurred while processing RAG pipeline: [WinError 10061] No connection could be made because the target machine actively refused it
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 72, in map_httpcore_exceptions
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 236, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 216, in handle_request
    raise exc from None
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 196, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 99, in handle_request
    raise exc
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 76, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 122, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_backends\sync.py", line 205, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 106, in send_inner
    response = self._client.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 926, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 954, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 991, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 1027, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 235, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 89, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 29, in process_rag_pipeline
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 835, in from_documents
    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1337, in from_texts
    qdrant = cls.construct_instance(
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1665, in construct_instance
    collection_info = client.get_collection(collection_name=collection_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1944, in get_collection
    return self._client.get_collection(collection_name=collection_name, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2436, in get_collection
    result: Optional[types.CollectionInfo] = self.http.collections_api.get_collection(
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 1314, in get_collection
    return self._build_for_get_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 397, in _build_for_get_collection
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 96, in send
    response = self.middleware(request, self.send_inner)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 205, in __call__
    return call_next(request)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 108, in send_inner
    raise ResponseHandlingException(e)
qdrant_client.http.exceptions.ResponseHandlingException: [WinError 10061] No connection could be made because the target machine actively refused it
Received file: LSTM.pdf and query: LSTMs ?
An error occurred while processing RAG pipeline: [WinError 10061] No connection could be made because the target machine actively refused it
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 72, in map_httpcore_exceptions
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 236, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 216, in handle_request
    raise exc from None
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 196, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 99, in handle_request
    raise exc
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 76, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 122, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_backends\sync.py", line 205, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 106, in send_inner
    response = self._client.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 926, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 954, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 991, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 1027, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 235, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 89, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 33, in process_rag_pipeline
    vectorstore = Qdrant.from_documents(documents=documents,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 835, in from_documents
    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1337, in from_texts
    qdrant = cls.construct_instance(
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1665, in construct_instance
    collection_info = client.get_collection(collection_name=collection_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1944, in get_collection
    return self._client.get_collection(collection_name=collection_name, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2436, in get_collection
    result: Optional[types.CollectionInfo] = self.http.collections_api.get_collection(
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 1314, in get_collection
    return self._build_for_get_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 397, in _build_for_get_collection
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 96, in send
    response = self.middleware(request, self.send_inner)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 205, in __call__
    return call_next(request)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 108, in send_inner
    raise ResponseHandlingException(e)
qdrant_client.http.exceptions.ResponseHandlingException: [WinError 10061] No connection could be made because the target machine actively refused it
Received file: LSTM.pdf and query: LSTMs ?
An error occurred while processing RAG pipeline: [Errno 11001] getaddrinfo failed
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 72, in map_httpcore_exceptions
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 236, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 216, in handle_request
    raise exc from None
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 196, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 99, in handle_request
    raise exc
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 76, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 122, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_backends\sync.py", line 205, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 106, in send_inner
    response = self._client.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 926, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 954, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 991, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 1027, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 235, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 89, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 33, in process_rag_pipeline
    vectorstore = Qdrant.from_documents(documents=documents,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 835, in from_documents
    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1337, in from_texts
    qdrant = cls.construct_instance(
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1665, in construct_instance
    collection_info = client.get_collection(collection_name=collection_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1944, in get_collection
    return self._client.get_collection(collection_name=collection_name, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2436, in get_collection
    result: Optional[types.CollectionInfo] = self.http.collections_api.get_collection(
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 1314, in get_collection
    return self._build_for_get_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 397, in _build_for_get_collection
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 96, in send
    response = self.middleware(request, self.send_inner)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 205, in __call__
    return call_next(request)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 108, in send_inner
    raise ResponseHandlingException(e)
qdrant_client.http.exceptions.ResponseHandlingException: [Errno 11001] getaddrinfo failed
Received file: LSTM.pdf and query: LSTMs ?
An error occurred while processing RAG pipeline: [Errno 11001] getaddrinfo failed
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 72, in map_httpcore_exceptions
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 236, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 216, in handle_request
    raise exc from None
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 196, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 99, in handle_request
    raise exc
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 76, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 122, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_backends\sync.py", line 205, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 106, in send_inner
    response = self._client.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 926, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 954, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 991, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 1027, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 235, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 89, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 39, in process_rag_pipeline
    vectorstore = Qdrant.from_documents(documents=documents,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 835, in from_documents
    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1337, in from_texts
    qdrant = cls.construct_instance(
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1665, in construct_instance
    collection_info = client.get_collection(collection_name=collection_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1944, in get_collection
    return self._client.get_collection(collection_name=collection_name, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2436, in get_collection
    result: Optional[types.CollectionInfo] = self.http.collections_api.get_collection(
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 1314, in get_collection
    return self._build_for_get_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 397, in _build_for_get_collection
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 96, in send
    response = self.middleware(request, self.send_inner)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 205, in __call__
    return call_next(request)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 108, in send_inner
    raise ResponseHandlingException(e)
qdrant_client.http.exceptions.ResponseHandlingException: [Errno 11001] getaddrinfo failed
Received file: LSTM.pdf and query: LSTMs ?
An error occurred while processing RAG pipeline: [Errno 11001] getaddrinfo failed
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 72, in map_httpcore_exceptions
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 236, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 216, in handle_request
    raise exc from None
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 196, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 99, in handle_request
    raise exc
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 76, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 122, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_backends\sync.py", line 205, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 106, in send_inner
    response = self._client.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 926, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 954, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 991, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 1027, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 235, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 89, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 39, in process_rag_pipeline
    vectorstore = Qdrant.from_documents(documents=documents,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 835, in from_documents
    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1337, in from_texts
    qdrant = cls.construct_instance(
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1665, in construct_instance
    collection_info = client.get_collection(collection_name=collection_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1944, in get_collection
    return self._client.get_collection(collection_name=collection_name, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2436, in get_collection
    result: Optional[types.CollectionInfo] = self.http.collections_api.get_collection(
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 1314, in get_collection
    return self._build_for_get_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 397, in _build_for_get_collection
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 96, in send
    response = self.middleware(request, self.send_inner)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 205, in __call__
    return call_next(request)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 108, in send_inner
    raise ResponseHandlingException(e)
qdrant_client.http.exceptions.ResponseHandlingException: [Errno 11001] getaddrinfo failed
Received file: LSTM.pdf and query: LSTMs ?
An error occurred while processing RAG pipeline: [Errno 11001] getaddrinfo failed
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 72, in map_httpcore_exceptions
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 236, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 216, in handle_request
    raise exc from None
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 196, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 99, in handle_request
    raise exc
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 76, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 122, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_backends\sync.py", line 205, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 106, in send_inner
    response = self._client.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 926, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 954, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 991, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 1027, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 235, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 89, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 39, in process_rag_pipeline
    collection_name="rag",
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 835, in from_documents
    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1337, in from_texts
    qdrant = cls.construct_instance(
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1665, in construct_instance
    collection_info = client.get_collection(collection_name=collection_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1944, in get_collection
    return self._client.get_collection(collection_name=collection_name, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2436, in get_collection
    result: Optional[types.CollectionInfo] = self.http.collections_api.get_collection(
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 1314, in get_collection
    return self._build_for_get_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 397, in _build_for_get_collection
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 96, in send
    response = self.middleware(request, self.send_inner)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 205, in __call__
    return call_next(request)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 108, in send_inner
    raise ResponseHandlingException(e)
qdrant_client.http.exceptions.ResponseHandlingException: [Errno 11001] getaddrinfo failed
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: The write operation timed out
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 72, in map_httpcore_exceptions
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 236, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 216, in handle_request
    raise exc from None
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 196, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    return self._connection.handle_request(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\http11.py", line 143, in handle_request
    raise exc
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\http11.py", line 95, in handle_request
    self._send_request_body(**kwargs)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\http11.py", line 166, in _send_request_body
    self._send_event(event, timeout=timeout)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\http11.py", line 175, in _send_event
    self._network_stream.write(bytes_to_send, timeout=timeout)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_backends\sync.py", line 133, in write
    with map_exceptions(exc_map):
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.WriteTimeout: The write operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 106, in send_inner
    response = self._client.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 926, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 954, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 991, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 1027, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 235, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 89, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.WriteTimeout: The write operation timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 36, in process_rag_pipeline
    vectorstore = Qdrant.from_documents(documents=documents,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 835, in from_documents
    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1369, in from_texts
    qdrant.add_texts(texts, metadatas, ids, batch_size)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 192, in add_texts
    self.client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 96, in send
    response = self.middleware(request, self.send_inner)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 205, in __call__
    return call_next(request)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 108, in send_inner
    raise ResponseHandlingException(e)
qdrant_client.http.exceptions.ResponseHandlingException: The write operation timed out
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 1 validation error for ChatGroq
__root__
  Did not find groq_api_key, please add an environment variable `GROQ_API_KEY` which contains it, or pass `groq_api_key` as a named parameter. (type=value_error)
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 58, in process_rag_pipeline
    llm = ChatGroq(temperature=0, model_name="llama3-8b-8192")
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\load\serializable.py", line 113, in __init__
    super().__init__(*args, **kwargs)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\v1\main.py", line 341, in __init__
    raise validation_error
pydantic.v1.error_wrappers.ValidationError: 1 validation error for ChatGroq
__root__
  Did not find groq_api_key, please add an environment variable `GROQ_API_KEY` which contains it, or pass `groq_api_key` as a named parameter. (type=value_error)
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 1 validation error for ChatGroq
__root__
  Did not find groq_api_key, please add an environment variable `GROQ_API_KEY` which contains it, or pass `groq_api_key` as a named parameter. (type=value_error)
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 58, in process_rag_pipeline
    llm = ChatGroq(temperature=0, model_name="llama3-8b-8192")
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\load\serializable.py", line 113, in __init__
    super().__init__(*args, **kwargs)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\v1\main.py", line 341, in __init__
    raise validation_error
pydantic.v1.error_wrappers.ValidationError: 1 validation error for ChatGroq
__root__
  Did not find groq_api_key, please add an environment variable `GROQ_API_KEY` which contains it, or pass `groq_api_key` as a named parameter. (type=value_error)
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 'set' object has no attribute 'replace'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 71, in process_rag_pipeline
    dense_response = qa_chain.invoke({
                     ^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\base.py", line 164, in invoke
    raise e
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\base.py", line 154, in invoke
    self._call(inputs, run_manager=run_manager)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\conversational_retrieval\base.py", line 158, in _call
    docs = self._get_docs(new_question, inputs, run_manager=_run_manager)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\conversational_retrieval\base.py", line 395, in _get_docs
    docs = self.retriever.invoke(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\retrievers.py", line 253, in invoke
    raise e
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\retrievers.py", line 246, in invoke
    result = self._get_relevant_documents(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 1042, in _get_relevant_documents
    docs = self.vectorstore.similarity_search(query, **self.search_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 288, in similarity_search
    results = self.similarity_search_with_score(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 365, in similarity_search_with_score
    self._embed_query(query),
    ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 2065, in _embed_query
    embedding = self.embeddings.embed_query(query)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_huggingface\embeddings\huggingface.py", line 102, in embed_query
    return self.embed_documents([text])[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_huggingface\embeddings\huggingface.py", line 81, in embed_documents
    texts = list(map(lambda x: x.replace("\n", " "), texts))
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_huggingface\embeddings\huggingface.py", line 81, in <lambda>
    texts = list(map(lambda x: x.replace("\n", " "), texts))
                               ^^^^^^^^^
AttributeError: 'set' object has no attribute 'replace'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 'list' object has no attribute 'replace'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 71, in process_rag_pipeline
    dense_response = qa_chain.invoke({
                     ^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\base.py", line 164, in invoke
    raise e
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\base.py", line 154, in invoke
    self._call(inputs, run_manager=run_manager)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\conversational_retrieval\base.py", line 158, in _call
    docs = self._get_docs(new_question, inputs, run_manager=_run_manager)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\conversational_retrieval\base.py", line 395, in _get_docs
    docs = self.retriever.invoke(
           ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\retrievers.py", line 253, in invoke
    raise e
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\retrievers.py", line 246, in invoke
    result = self._get_relevant_documents(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 1042, in _get_relevant_documents
    docs = self.vectorstore.similarity_search(query, **self.search_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 288, in similarity_search
    results = self.similarity_search_with_score(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 365, in similarity_search_with_score
    self._embed_query(query),
    ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 2065, in _embed_query
    embedding = self.embeddings.embed_query(query)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_huggingface\embeddings\huggingface.py", line 102, in embed_query
    return self.embed_documents([text])[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_huggingface\embeddings\huggingface.py", line 81, in embed_documents
    texts = list(map(lambda x: x.replace("\n", " "), texts))
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_huggingface\embeddings\huggingface.py", line 81, in <lambda>
    texts = list(map(lambda x: x.replace("\n", " "), texts))
                               ^^^^^^^^^
AttributeError: 'list' object has no attribute 'replace'
Received file: LSTM.pdf and query: lstms ?
RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: long-Short Term Memory ?
RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: long-Short Term Memory ?
RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: long-Short Term Memory ?
RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: long-Short Term Memory ?
RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: long-Short Term Memory ?
An error occurred while processing RAG pipeline: 'Qdrant' object is not iterable
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 39, in process_rag_pipeline
    for doc in vectorstore:
TypeError: 'Qdrant' object is not iterable
Received file: LSTM.pdf and query: long-Short Term Memory ?
An error occurred while processing RAG pipeline: Unexpected Response: 403 (Forbidden)
Raw response content:
b'{"error":"forbidden"}'
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1665, in construct_instance
    collection_info = client.get_collection(collection_name=collection_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1944, in get_collection
    return self._client.get_collection(collection_name=collection_name, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2436, in get_collection
    result: Optional[types.CollectionInfo] = self.http.collections_api.get_collection(
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 1314, in get_collection
    return self._build_for_get_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 397, in _build_for_get_collection
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 403 (Forbidden)
Raw response content:
b'{"error":"forbidden"}'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 34, in process_rag_pipeline
    vectorstore = Qdrant.from_documents(documents=documents,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 835, in from_documents
    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1337, in from_texts
    qdrant = cls.construct_instance(
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1732, in construct_instance
    client.recreate_collection(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 2190, in recreate_collection
    return self._client.recreate_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2674, in recreate_collection
    self.delete_collection(collection_name, timeout=timeout)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2542, in delete_collection
    result: Optional[bool] = self.http.collections_api.delete_collection(
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 1241, in delete_collection
    return self._build_for_delete_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 259, in _build_for_delete_collection
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 403 (Forbidden)
Raw response content:
b'{"error":"forbidden"}'
Received file: LSTM.pdf and query: long-Short Term Memory ?
An error occurred while processing RAG pipeline: The write operation timed out
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 72, in map_httpcore_exceptions
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 236, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 216, in handle_request
    raise exc from None
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 196, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    return self._connection.handle_request(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\http11.py", line 143, in handle_request
    raise exc
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\http11.py", line 95, in handle_request
    self._send_request_body(**kwargs)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\http11.py", line 166, in _send_request_body
    self._send_event(event, timeout=timeout)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\http11.py", line 175, in _send_event
    self._network_stream.write(bytes_to_send, timeout=timeout)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_backends\sync.py", line 133, in write
    with map_exceptions(exc_map):
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.WriteTimeout: The write operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 106, in send_inner
    response = self._client.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 926, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 954, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 991, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 1027, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 235, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 89, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.WriteTimeout: The write operation timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 36, in process_rag_pipeline
    vectorstore = Qdrant.from_documents(documents=documents,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 835, in from_documents
    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1369, in from_texts
    qdrant.add_texts(texts, metadatas, ids, batch_size)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 192, in add_texts
    self.client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 96, in send
    response = self.middleware(request, self.send_inner)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 205, in __call__
    return call_next(request)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 108, in send_inner
    raise ResponseHandlingException(e)
qdrant_client.http.exceptions.ResponseHandlingException: The write operation timed out
Received file: LSTM.pdf and query: long-Short Term Memory ?
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: The write operation timed out
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 72, in map_httpcore_exceptions
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 236, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 216, in handle_request
    raise exc from None
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 196, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    return self._connection.handle_request(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\http11.py", line 143, in handle_request
    raise exc
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\http11.py", line 95, in handle_request
    self._send_request_body(**kwargs)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\http11.py", line 166, in _send_request_body
    self._send_event(event, timeout=timeout)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\http11.py", line 175, in _send_event
    self._network_stream.write(bytes_to_send, timeout=timeout)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_backends\sync.py", line 133, in write
    with map_exceptions(exc_map):
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.WriteTimeout: The write operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 106, in send_inner
    response = self._client.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 926, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 954, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 991, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 1027, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 235, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 89, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.WriteTimeout: The write operation timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 36, in process_rag_pipeline
    vectorstore = Qdrant.from_documents(documents=documents,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 835, in from_documents
    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1369, in from_texts
    qdrant.add_texts(texts, metadatas, ids, batch_size)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 192, in add_texts
    self.client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 96, in send
    response = self.middleware(request, self.send_inner)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 205, in __call__
    return call_next(request)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 108, in send_inner
    raise ResponseHandlingException(e)
qdrant_client.http.exceptions.ResponseHandlingException: The write operation timed out
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: [WinError 10061] No connection could be made because the target machine actively refused it
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 72, in map_httpcore_exceptions
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 236, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 216, in handle_request
    raise exc from None
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 196, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 99, in handle_request
    raise exc
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 76, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 122, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_backends\sync.py", line 205, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 106, in send_inner
    response = self._client.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 926, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 954, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 991, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 1027, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 235, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 89, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 36, in process_rag_pipeline
    vectorstore = Qdrant.from_documents(documents=documents,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 835, in from_documents
    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1337, in from_texts
    qdrant = cls.construct_instance(
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1665, in construct_instance
    collection_info = client.get_collection(collection_name=collection_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1944, in get_collection
    return self._client.get_collection(collection_name=collection_name, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2436, in get_collection
    result: Optional[types.CollectionInfo] = self.http.collections_api.get_collection(
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 1314, in get_collection
    return self._build_for_get_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 397, in _build_for_get_collection
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 96, in send
    response = self.middleware(request, self.send_inner)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 205, in __call__
    return call_next(request)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 108, in send_inner
    raise ResponseHandlingException(e)
qdrant_client.http.exceptions.ResponseHandlingException: [WinError 10061] No connection could be made because the target machine actively refused it
Received file: LSTM.pdf and query: lstms ?
RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: How can  recurrent networks  use their feedback connections ?
RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: How can  recurrent networks  use their feedback connections ?
RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: What are long short-term memory (LSTM) ?
RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: What are long short-term memory (LSTM) ?
RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: Lstms ?
An error occurred while processing RAG pipeline: [WinError 10061] No connection could be made because the target machine actively refused it
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 72, in map_httpcore_exceptions
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 236, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 216, in handle_request
    raise exc from None
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 196, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 99, in handle_request
    raise exc
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 76, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 122, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_backends\sync.py", line 205, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 106, in send_inner
    response = self._client.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 926, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 954, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 991, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 1027, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 235, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 89, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 37, in process_rag_pipeline
    vectorstore = Qdrant.from_documents(documents=documents,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 835, in from_documents
    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1337, in from_texts
    qdrant = cls.construct_instance(
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1665, in construct_instance
    collection_info = client.get_collection(collection_name=collection_name)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1944, in get_collection
    return self._client.get_collection(collection_name=collection_name, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2436, in get_collection
    result: Optional[types.CollectionInfo] = self.http.collections_api.get_collection(
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 1314, in get_collection
    return self._build_for_get_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 397, in _build_for_get_collection
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 96, in send
    response = self.middleware(request, self.send_inner)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 205, in __call__
    return call_next(request)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 108, in send_inner
    raise ResponseHandlingException(e)
qdrant_client.http.exceptions.ResponseHandlingException: [WinError 10061] No connection could be made because the target machine actively refused it
Received file: LSTM.pdf and query: Lstms ?
RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: Lstms ?
RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: What are Lstms ? How do they retain long term dependencies ?
RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: What are Lstms ? How do they retain long term dependencies ?
An error occurred while processing RAG pipeline: Error code: 503 - {'error': {'message': 'Service Unavailable', 'type': 'internal_server_error'}}
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    result = await process_rag_pipeline(temp_file_path, query)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 74, in process_rag_pipeline
    dense_response = qa_chain.invoke({
                     ^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\base.py", line 164, in invoke
    raise e
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\base.py", line 154, in invoke
    self._call(inputs, run_manager=run_manager)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\conversational_retrieval\base.py", line 169, in _call
    answer = self.combine_docs_chain.run(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\_api\deprecation.py", line 180, in warning_emitting_wrapper
    return wrapped(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\base.py", line 603, in run
    return self(kwargs, callbacks=callbacks, tags=tags, metadata=metadata)[
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\_api\deprecation.py", line 180, in warning_emitting_wrapper
    return wrapped(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\base.py", line 381, in __call__
    return self.invoke(
           ^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\base.py", line 164, in invoke
    raise e
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\base.py", line 154, in invoke
    self._call(inputs, run_manager=run_manager)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\combine_documents\base.py", line 138, in _call
    output, extra_return_dict = self.combine_docs(
                                ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\combine_documents\map_reduce.py", line 226, in combine_docs
    map_results = self.llm_chain.apply(
                  ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\llm.py", line 250, in apply
    raise e
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\llm.py", line 247, in apply
    response = self.generate(input_list, run_manager=run_manager)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain\chains\llm.py", line 138, in generate
    return self.llm.generate_prompt(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\language_models\chat_models.py", line 777, in generate_prompt
    return self.generate(prompt_messages, stop=stop, callbacks=callbacks, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\language_models\chat_models.py", line 634, in generate
    raise e
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\language_models\chat_models.py", line 624, in generate
    self._generate_with_cache(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\language_models\chat_models.py", line 846, in _generate_with_cache
    result = self._generate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_groq\chat_models.py", line 472, in _generate
    response = self.client.create(messages=message_dicts, **params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\groq\resources\chat\completions.py", line 287, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\groq\_base_client.py", line 1244, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\groq\_base_client.py", line 936, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\groq\_base_client.py", line 1039, in _request
    raise self._make_status_error_from_response(err.response) from None
groq.InternalServerError: Error code: 503 - {'error': {'message': 'Service Unavailable', 'type': 'internal_server_error'}}
Received file: LSTM.pdf and query: What are Lstms ? How do they retain long term dependencies ?
RAG pipeline processing completed successfully.
Received file: LSTM.pdf and query: Lstms ?
An error occurred while processing RAG pipeline: `host` param is not expected to contain protocol (http:// or https://). Try to use `url` parameter instead.
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 25, in ragas_endpoint
    retrievers = await process_retrievers(temp_file_path, query)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 55, in process_retrievers
    vectorstore = await create_vectorstore(documents, url)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 20, in create_vectorstore
    client = QdrantClient(host=url)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 134, in __init__
    self._client = QdrantRemote(
                   ^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 79, in __init__
    raise ValueError(
ValueError: `host` param is not expected to contain protocol (http:// or https://). Try to use `url` parameter instead.
Received file: LSTM.pdf and query: Lstms ?
An error occurred while processing RAG pipeline: `host` param is not expected to contain protocol (http:// or https://). Try to use `url` parameter instead.
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 25, in ragas_endpoint
    retrievers = await process_retrievers(temp_file_path, query)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 55, in process_retrievers
    vectorstore = await create_vectorstore(documents, url)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 20, in create_vectorstore
    client = QdrantClient(url=url)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 134, in __init__
    self._client = QdrantRemote(
                   ^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 79, in __init__
    raise ValueError(
ValueError: `host` param is not expected to contain protocol (http:// or https://). Try to use `url` parameter instead.
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: cannot pickle '_thread.RLock' object
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 25, in ragas_endpoint
    retrievers = await process_retrievers(temp_file_path, query)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 55, in process_retrievers
    vectorstore = await create_vectorstore(documents, url)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 23, in create_vectorstore
    vectorstore = Qdrant.from_documents(
                  ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 835, in from_documents
    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1337, in from_texts
    qdrant = cls.construct_instance(
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 1643, in construct_instance
    client, async_client = cls._generate_clients(
                           ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_community\vectorstores\qdrant.py", line 2248, in _generate_clients
    sync_client = QdrantClient(
                  ^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 112, in __init__
    self._init_options.update(deepcopy(kwargs))
                              ^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 221, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 162, in deepcopy
    y = _reconstruct(x, memo, *rv)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 259, in _reconstruct
    state = deepcopy(state, memo)
            ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 221, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 162, in deepcopy
    y = _reconstruct(x, memo, *rv)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 259, in _reconstruct
    state = deepcopy(state, memo)
            ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 221, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 162, in deepcopy
    y = _reconstruct(x, memo, *rv)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 259, in _reconstruct
    state = deepcopy(state, memo)
            ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 221, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 162, in deepcopy
    y = _reconstruct(x, memo, *rv)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 259, in _reconstruct
    state = deepcopy(state, memo)
            ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 221, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 162, in deepcopy
    y = _reconstruct(x, memo, *rv)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 259, in _reconstruct
    state = deepcopy(state, memo)
            ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 221, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 162, in deepcopy
    y = _reconstruct(x, memo, *rv)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 259, in _reconstruct
    state = deepcopy(state, memo)
            ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 221, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 162, in deepcopy
    y = _reconstruct(x, memo, *rv)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 259, in _reconstruct
    state = deepcopy(state, memo)
            ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 136, in deepcopy
    y = copier(x, memo)
        ^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 221, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
                             ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\copy.py", line 151, in deepcopy
    rv = reductor(4)
         ^^^^^^^^^^^
TypeError: cannot pickle '_thread.RLock' object
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 1 validation error for VectorStoreRetriever
__root__
  search_type of bm25 not allowed. Valid values are: ('similarity', 'similarity_score_threshold', 'mmr') (type=value_error)
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 25, in ragas_endpoint
    retrievers = await process_retrievers(temp_file_path, query)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 55, in process_retrievers
    sparse_retriever = await create_sparse_retriever(vectorstore)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 36, in create_sparse_retriever
    sparse_retriever = vectorstore.as_retriever(search_type="bm25", search_kwargs={"k": 7})
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\vectorstores\base.py", line 969, in as_retriever
    return VectorStoreRetriever(vectorstore=self, tags=tags, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_core\load\serializable.py", line 113, in __init__
    super().__init__(*args, **kwargs)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\v1\main.py", line 341, in __init__
    raise validation_error
pydantic.v1.error_wrappers.ValidationError: 1 validation error for VectorStoreRetriever
__root__
  search_type of bm25 not allowed. Valid values are: ('similarity', 'similarity_score_threshold', 'mmr') (type=value_error)
Received file: LSTM.pdf and query: Lstms ?
An error occurred while processing RAG pipeline: TextEncodeInput must be Union[TextInputSequence, Tuple[InputSequence, InputSequence]]
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 112, in index_documents
    dense_embedding = list(dense_embedding_model.embed([doc]))[0]
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\text_embedding.py", line 104, in embed
    yield from self.model.embed(documents, batch_size, parallel, **kwargs)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_embedding.py", line 226, in embed
    yield from self._embed_documents(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 109, in _embed_documents
    yield from self._post_process_onnx_output(self.onnx_embed(batch))
                                              ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 62, in onnx_embed
    encoded = self.tokenize(documents, **kwargs)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 55, in tokenize
    return self.tokenizer.encode_batch(documents)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: TextEncodeInput must be Union[TextInputSequence, Tuple[InputSequence, InputSequence]]
Received file: LSTM.pdf and query: Lstms ?
An error occurred while processing RAG pipeline: TextEncodeInput must be Union[TextInputSequence, Tuple[InputSequence, InputSequence]]
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 114, in index_documents
    dense_embedding = list(dense_embedding_model.embed([doc]))[0]
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\text_embedding.py", line 104, in embed
    yield from self.model.embed(documents, batch_size, parallel, **kwargs)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_embedding.py", line 226, in embed
    yield from self._embed_documents(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 109, in _embed_documents
    yield from self._post_process_onnx_output(self.onnx_embed(batch))
                                              ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 62, in onnx_embed
    encoded = self.tokenize(documents, **kwargs)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 55, in tokenize
    return self.tokenizer.encode_batch(documents)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: TextEncodeInput must be Union[TextInputSequence, Tuple[InputSequence, InputSequence]]
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: TextEncodeInput must be Union[TextInputSequence, Tuple[InputSequence, InputSequence]]
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 114, in index_documents
    dense_embedding = list(dense_embedding_model.embed([doc]))[0]
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\text_embedding.py", line 104, in embed
    yield from self.model.embed(documents, batch_size, parallel, **kwargs)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_embedding.py", line 226, in embed
    yield from self._embed_documents(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 109, in _embed_documents
    yield from self._post_process_onnx_output(self.onnx_embed(batch))
                                              ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 62, in onnx_embed
    encoded = self.tokenize(documents, **kwargs)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 55, in tokenize
    return self.tokenizer.encode_batch(documents)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: TextEncodeInput must be Union[TextInputSequence, Tuple[InputSequence, InputSequence]]
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 'HuggingFaceEmbeddings' object has no attribute 'embed'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 115, in index_documents
    dense_embedding = list(dense_embedding_model.embed([doc]))[0]
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'HuggingFaceEmbeddings' object has no attribute 'embed'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 'HuggingFaceEmbeddings' object has no attribute 'embed'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 115, in index_documents
    dense_embedding = list(dense_embedding_model.embed([doc]))[0]
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'HuggingFaceEmbeddings' object has no attribute 'embed'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 'HuggingFaceEmbeddings' object has no attribute 'embed'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 115, in index_documents
    dense_embedding = list(dense_embedding_model.embed_documents([doc['page_content']]))[0]
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'HuggingFaceEmbeddings' object has no attribute 'embed'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 'HuggingFaceEmbeddings' object has no attribute 'embed'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 115, in index_documents
    dense_embedding = list(dense_embedding_model.embed_documents([doc['page_content']]))[0]
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'HuggingFaceEmbeddings' object has no attribute 'embed'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: TextEncodeInput must be Union[TextInputSequence, Tuple[InputSequence, InputSequence]]
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 138, in index_documents
    sparse_vector = create_sparse_vector(doc, bm_42_embedding_model)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 87, in create_sparse_vector
    embeddings = list(sparse_embedding_model.embed([text]))[0]
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\sparse\sparse_text_embedding.py", line 102, in embed
    yield from self.model.embed(documents, batch_size, parallel, **kwargs)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\sparse\bm42.py", line 251, in embed
    yield from self._embed_documents(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 109, in _embed_documents
    yield from self._post_process_onnx_output(self.onnx_embed(batch))
                                              ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 62, in onnx_embed
    encoded = self.tokenize(documents, **kwargs)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 55, in tokenize
    return self.tokenizer.encode_batch(documents)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: TextEncodeInput must be Union[TextInputSequence, Tuple[InputSequence, InputSequence]]
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: TextEncodeInput must be Union[TextInputSequence, Tuple[InputSequence, InputSequence]]
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 138, in index_documents
    sparse_vector = create_sparse_vector(doc, bm_42_embedding_model)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 87, in create_sparse_vector
    embeddings = list(sparse_embedding_model.embed([text]))[0]
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\sparse\sparse_text_embedding.py", line 102, in embed
    yield from self.model.embed(documents, batch_size, parallel, **kwargs)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\sparse\bm42.py", line 251, in embed
    yield from self._embed_documents(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 109, in _embed_documents
    yield from self._post_process_onnx_output(self.onnx_embed(batch))
                                              ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 62, in onnx_embed
    encoded = self.tokenize(documents, **kwargs)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 55, in tokenize
    return self.tokenizer.encode_batch(documents)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: TextEncodeInput must be Union[TextInputSequence, Tuple[InputSequence, InputSequence]]
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: TextEncodeInput must be Union[TextInputSequence, Tuple[InputSequence, InputSequence]]
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 140, in index_documents
    sparse_vector = create_sparse_vector(doc, bm_42_embedding_model)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 87, in create_sparse_vector
    embeddings = list(sparse_embedding_model.embed([text]))[0]
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\sparse\sparse_text_embedding.py", line 102, in embed
    yield from self.model.embed(documents, batch_size, parallel, **kwargs)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\sparse\bm42.py", line 251, in embed
    yield from self._embed_documents(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 109, in _embed_documents
    yield from self._post_process_onnx_output(self.onnx_embed(batch))
                                              ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 62, in onnx_embed
    encoded = self.tokenize(documents, **kwargs)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 55, in tokenize
    return self.tokenizer.encode_batch(documents)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: TextEncodeInput must be Union[TextInputSequence, Tuple[InputSequence, InputSequence]]
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 'tuple' object has no attribute 'replace'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 135, in index_documents
    dense_embedding = create_dense_vector(doc,"sentence-transformers/all-MiniLM-L6-v2")
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 111, in create_dense_vector
    embeddings = embeddings_model.embed_documents(docs)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_huggingface\embeddings\huggingface.py", line 81, in embed_documents
    texts = list(map(lambda x: x.replace("\n", " "), texts))
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\langchain_huggingface\embeddings\huggingface.py", line 81, in <lambda>
    texts = list(map(lambda x: x.replace("\n", " "), texts))
                               ^^^^^^^^^
AttributeError: 'tuple' object has no attribute 'replace'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: TextEncodeInput must be Union[TextInputSequence, Tuple[InputSequence, InputSequence]]
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 140, in index_documents
    sparse_vector = create_sparse_vector(doc, bm_42_embedding_model)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 87, in create_sparse_vector
    embeddings = list(sparse_embedding_model.embed([text]))[0]
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\sparse\sparse_text_embedding.py", line 102, in embed
    yield from self.model.embed(documents, batch_size, parallel, **kwargs)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\sparse\bm42.py", line 251, in embed
    yield from self._embed_documents(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 109, in _embed_documents
    yield from self._post_process_onnx_output(self.onnx_embed(batch))
                                              ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 62, in onnx_embed
    encoded = self.tokenize(documents, **kwargs)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 55, in tokenize
    return self.tokenizer.encode_batch(documents)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: TextEncodeInput must be Union[TextInputSequence, Tuple[InputSequence, InputSequence]]
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 'Document' object has no attribute 'get'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 139, in index_documents
    dense_embedding = create_dense_vector(doc,"sentence-transformers/all-MiniLM-L6-v2")
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 113, in create_dense_vector
    texts = docs.get("page_content", "")
            ^^^^^^^^
AttributeError: 'Document' object has no attribute 'get'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: TextEncodeInput must be Union[TextInputSequence, Tuple[InputSequence, InputSequence]]
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 140, in index_documents
    sparse_vector = create_sparse_vector(doc, bm_42_embedding_model)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 87, in create_sparse_vector
    embeddings = list(sparse_embedding_model.embed([text]))[0]
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\sparse\sparse_text_embedding.py", line 102, in embed
    yield from self.model.embed(documents, batch_size, parallel, **kwargs)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\sparse\bm42.py", line 251, in embed
    yield from self._embed_documents(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 109, in _embed_documents
    yield from self._post_process_onnx_output(self.onnx_embed(batch))
                                              ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 62, in onnx_embed
    encoded = self.tokenize(documents, **kwargs)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\fastembed\text\onnx_text_model.py", line 55, in tokenize
    return self.tokenizer.encode_batch(documents)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: TextEncodeInput must be Union[TextInputSequence, Tuple[InputSequence, InputSequence]]
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 'Document' object is not subscriptable
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 147, in index_documents
    'text': doc['page_content'],
            ~~~^^^^^^^^^^^^^^^^
TypeError: 'Document' object is not subscriptable
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between multi and regular vectors failed"},"time":0.205420542}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 151, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between multi and regular vectors failed"},"time":0.205420542}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between multi and regular vectors failed"},"time":0.081999913}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 148, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between multi and regular vectors failed"},"time":0.081999913}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 'SentenceTransformer' object has no attribute 'embed_documents'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 150, in index_documents
    dense_embedding = create_dense_vector(doc, dense_embedding_model)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 125, in create_dense_vector
    embeddings = model.embed_documents([texts])
                 ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\torch\nn\modules\module.py", line 1729, in __getattr__
    raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'")
AttributeError: 'SentenceTransformer' object has no attribute 'embed_documents'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Not existing vector name error: "},"time":0.101346591}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 157, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Not existing vector name error: "},"time":0.101346591}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Not existing vector name error: dense"},"time":0.014145948}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 173, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Not existing vector name error: dense"},"time":0.014145948}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between sparse and regular vectors failed"},"time":0.020237949}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 171, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between sparse and regular vectors failed"},"time":0.020237949}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: QdrantClient.create_collection() missing 1 required positional argument: 'vectors_config'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 140, in index_documents
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 75, in create_sparse_collection
    client.create_collection(
TypeError: QdrantClient.create_collection() missing 1 required positional argument: 'vectors_config'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: QdrantClient.create_collection() missing 1 required positional argument: 'vectors_config'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 140, in index_documents
    # Extract and split PDF content
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 75, in create_sparse_collection
    if not client.collection_exists(collection_name=dense_collection):
TypeError: QdrantClient.create_collection() missing 1 required positional argument: 'vectors_config'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 404 (Not Found)
Raw response content:
b'{"status":{"error":"Not found: Collection `rag_sparse` doesn\'t exist!"},"time":0.000512046}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 173, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 404 (Not Found)
Raw response content:
b'{"status":{"error":"Not found: Collection `rag_sparse` doesn\'t exist!"},"time":0.000512046}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between sparse and regular vectors failed"},"time":0.014821738}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 173, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between sparse and regular vectors failed"},"time":0.014821738}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between sparse and regular vectors failed"},"time":0.011092902}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 174, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between sparse and regular vectors failed"},"time":0.011092902}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between sparse and regular vectors failed"},"time":0.006843407}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 176, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between sparse and regular vectors failed"},"time":0.006843407}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 2 validation errors for PointStruct
vector
  Field required [type=missing, input_value={'id': 0, 'sparse_vector'... 0.17926642546791496])}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value={'sparse': SparseVector(i..., 0.17926642546791496])}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 173, in index_documents
    sparse_point = models.PointStruct(
                   ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\main.py", line 211, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 2 validation errors for PointStruct
vector
  Field required [type=missing, input_value={'id': 0, 'sparse_vector'... 0.17926642546791496])}}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value={'sparse': SparseVector(i..., 0.17926642546791496])}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Not existing vector name error: "},"time":0.041154362}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 163, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Not existing vector name error: "},"time":0.041154362}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Not existing vector name error: "},"time":0.024771819}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 163, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Not existing vector name error: "},"time":0.024771819}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Not existing vector name error: "},"time":0.015893766}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 163, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Not existing vector name error: "},"time":0.015893766}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Not existing vector name error: "},"time":0.020502029}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 163, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Not existing vector name error: "},"time":0.020502029}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 2 validation errors for PointStruct
vector
  Field required [type=missing, input_value={'id': 0, 'sparse_vector'..., 0.17926642546791496])}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 173, in index_documents
    sparse_point = models.PointStruct(
                   ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\main.py", line 211, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 2 validation errors for PointStruct
vector
  Field required [type=missing, input_value={'id': 0, 'sparse_vector'..., 0.17926642546791496])}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 2 validation errors for PointStruct
vector
  Field required [type=missing, input_value={'id': 0, 'sparse_vector'..., 0.17926642546791496])}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 170, in index_documents
    sparse_point = models.PointStruct(
                   ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\main.py", line 211, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 2 validation errors for PointStruct
vector
  Field required [type=missing, input_value={'id': 0, 'sparse_vector'..., 0.17926642546791496])}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 2 validation errors for PointStruct
vector
  Field required [type=missing, input_value={'id': 0, 'sparse_vector'..., 0.17926642546791496])}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 170, in index_documents
    sparse_point = models.PointStruct(
                   ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\main.py", line 211, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 2 validation errors for PointStruct
vector
  Field required [type=missing, input_value={'id': 0, 'sparse_vector'..., 0.17926642546791496])}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 2 validation errors for PointStruct
vector
  Field required [type=missing, input_value={'id': 0, 'sparse_vector'..., 0.17926642546791496])}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 170, in index_documents
    sparse_point = models.PointStruct(
                   ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\main.py", line 211, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 2 validation errors for PointStruct
vector
  Field required [type=missing, input_value={'id': 0, 'sparse_vector'..., 0.17926642546791496])}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 2 validation errors for PointStruct
vector
  Field required [type=missing, input_value={'id': 0, 'sparse_vector'..., 0.17926642546791496])}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 167, in index_documents
    sparse_point = models.PointStruct(
                   ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\main.py", line 211, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 2 validation errors for PointStruct
vector
  Field required [type=missing, input_value={'id': 0, 'sparse_vector'..., 0.17926642546791496])}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 2 validation errors for PointStruct
vector
  Field required [type=missing, input_value={'id': 0, 'sparse_vector'..., 0.17926642546791496])}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 167, in index_documents
    sparse_point = models.PointStruct(
                   ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\main.py", line 211, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 2 validation errors for PointStruct
vector
  Field required [type=missing, input_value={'id': 0, 'sparse_vector'..., 0.17926642546791496])}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 4 validation errors for PointStruct
id.int
  Input should be a valid integer [type=int_type, input_value=[1208535885, 1717818563, ..., 1936576414, 759283944], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/int_type
id.str
  Input should be a valid string [type=string_type, input_value=[1208535885, 1717818563, ..., 1936576414, 759283944], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/string_type
vector
  Field required [type=missing, input_value={'id': [1208535885, 17178...2, 0.17926642546791496]}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=[0.09527837900878776, 0.1...92, 0.17926642546791496], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 167, in index_documents
    sparse_point = models.PointStruct(
                   ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\main.py", line 211, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 4 validation errors for PointStruct
id.int
  Input should be a valid integer [type=int_type, input_value=[1208535885, 1717818563, ..., 1936576414, 759283944], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/int_type
id.str
  Input should be a valid string [type=string_type, input_value=[1208535885, 1717818563, ..., 1936576414, 759283944], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/string_type
vector
  Field required [type=missing, input_value={'id': [1208535885, 17178...2, 0.17926642546791496]}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=[0.09527837900878776, 0.1...92, 0.17926642546791496], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 299 validation errors for PointsList
points.0
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.1
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[175...8, 0.10329566353641552]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.2
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[190...5, 0.06819249567948178]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.3
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[200...4, 0.11247077602965758]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.4
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[173...2, 0.06649947029440001]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.5
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[189...1, 0.04672682712923368]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.6
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[553...7, 0.15025462763866623]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.7
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[257...7, 0.24632727593759102]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.8
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[141...56, 0.0331883455647193]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.9
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[125...8, 0.27919921149935356]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.10
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[818...72, 0.1284351357130517]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.11
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[132...9, 0.07577071603598277]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.12
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[586...9, 0.24405169260328616]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.13
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[569..., 0.060037667619368795]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.14
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[170..., 0.035173812704171296]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.15
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...6, 0.05516698070681387]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.16
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195..., 0.059845523572866044]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.17
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...3, 0.09227712640903377]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.18
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[132...2, 0.03661951239464721]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.19
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[407...4, 0.26960675648743426]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.20
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...97, 0.0392897669951577]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.21
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[107...8, 0.03812153828787342]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.22
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[209...16, 0.1733913647813023]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.23
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...39, 0.1406142768417878]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.24
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[162...2, 0.10378185171729785]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.25
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[210..., 0.057835997698644184]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.26
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[166...3, 0.04799815576958507]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.27
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[966...5, 0.08636234743923452]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.28
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...8, 0.38576249037029436]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.29
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[943...8, 0.03454445523374411]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.30
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[427...8, 0.08922171430504953]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.31
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[264...34, 0.0518052999389633]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.32
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...98, 0.0522776374181176]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.33
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[151...3, 0.14683903312465413]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.34
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[111...7, 0.15216567312241513]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.35
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[450...1, 0.08982808584698934]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.36
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[728...2, 0.08811343537910364]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.37
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[190...5, 0.03469243822289617]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.38
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[967...6, 0.05086232709519498]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.39
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[663..., 0.059186778111630346]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.40
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[264...9, 0.17683158557418546]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.41
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[111...2, 0.14716259079685418]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.42
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[105...23, 0.1800101654511365]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.43
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...4, 0.09358521881075796]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.44
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[173...5, 0.10701033477459206]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.45
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[898...43, 0.0787223427307013]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.46
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[212...6, 0.08279429023872673]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.47
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[108...4, 0.09612721559530099]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.48
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[101...8, 0.04885545888718632]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.49
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[181...9, 0.12235184645895247]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.50
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[184...7, 0.06642983270857969]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.51
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...5, 0.19629184545078515]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.52
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[159...5, 0.04352412845134309]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.53
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...55, 0.1200725952168715]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.54
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[192...1, 0.05468959228098191]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.55
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[135...6, 0.15830714612734503]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.56
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[516...89, 0.0856393930346617]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.57
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[193...6, 0.03763967372796752]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.58
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[160...3, 0.17317084699817367]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.59
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[203...9, 0.10109567060936632]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.60
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[170...8, 0.09598183104103354]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.61
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[116...3, 0.16924719788250073]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.62
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[516...3, 0.13797040462928606]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.63
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...4, 0.03743915709884237]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.64
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...9, 0.07699237651428228]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.65
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[105...7, 0.04662044526738168]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.66
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[287...8, 0.07241022134274401]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.67
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[122...5, 0.08230544418068238]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.68
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[112...5, 0.09679884582791955]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.69
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[206...1, 0.16358647950797972]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.70
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[206...4, 0.04829918779780324]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.71
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[516...06, 0.4011358196059224]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.72
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[651...2, 0.03677288833589235]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.73
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[264...5, 0.13442817640767613]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.74
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[516...1, 0.09903120151090834]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.75
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[553..., 0.036853423261235925]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.76
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[516...4, 0.05992111606639232]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.77
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[898..., 0.044191138926298126]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.78
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...1, 0.09925610473419201]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.79
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[172...5, 0.16597984261127297]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.80
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[226...17, 0.0888783111456736]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.81
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[134...6, 0.11853349632416055]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.82
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[106...5, 0.08630036679751076]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.83
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[147..., 0.055955509981945775]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.84
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[516...7, 0.04573375973278819]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.85
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[677...3, 0.07654532339863243]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.86
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[428...3, 0.04972515835248918]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.87
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[127...2, 0.11232966130529698]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.88
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[205...3, 0.03582364698080676]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.89
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[119...8, 0.13237968039277723]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.90
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[569...8, 0.10278184606024518]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.91
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[922...5, 0.12127482579871605]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.92
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[275...4, 0.20958844794716266]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.93
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[343...6, 0.04665793468294519]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.94
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...5, 0.11339977451691476]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.95
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[184...8, 0.07704114551245408]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.96
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[127...5, 0.10003140601411223]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.97
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[442...2, 0.04182457267046828]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.98
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[935...4, 0.15168282444293837]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.99
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[116...058, 0.256697289536564]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.100
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[959...97, 0.0713965612078632]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.101
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[116...8, 0.09432691823673976]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.102
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...7, 0.45415561138346217]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.103
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[214...6, 0.04329768856535607]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.104
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[176...26, 0.0397817572520503]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.105
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...42, 0.0553851653778846]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.106
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...6, 0.05179568227847638]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.107
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[586...6, 0.10658060442256774]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.108
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[137...5, 0.10253081512837492]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.109
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[156...507, 0.357333333989073]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.110
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[449...4, 0.06410962377643993]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.111
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[212...33, 0.2950087205071672]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.112
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...5, 0.12631396656270077]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.113
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953..., 0.050570452021031165]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.114
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[571...6, 0.06619426590568252]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.115
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[160...5, 0.15807142549736697]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.116
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[436...5, 0.06046756975649877]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.117
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...3, 0.10131950658900371]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.118
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[361...8, 0.08710363784886171]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.119
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[151...3, 0.06512856083608316]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.120
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[180...4, 0.22514801365116674]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.121
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...6, 0.06721307723796893]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.122
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...4, 0.09667319018456269]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.123
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...2, 0.03870720524560765]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.124
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[106...598, 0.046227234535051]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.125
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[156...33, 0.0750163278735583]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.126
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...3, 0.09737909503884953]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.127
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[933...06, 0.1055496430770916]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.128
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[105...5, 0.08944890942505909]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.129
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[520...1, 0.07374509724747873]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.130
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[411...8, 0.10407958227298432]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.131
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[135...36, 0.0868238230686486]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.132
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[794..., 0.045612477275872025]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.133
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[116..., 0.047810137604744236]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.134
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[436...7, 0.09707216837463305]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.135
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[176...82, 0.0790093516144898]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.136
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...2, 0.07128889126244367]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.137
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[172...6, 0.17563879263633458]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.138
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[102...41, 0.1812838690595436]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.139
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[442...7, 0.08062466836615362]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.140
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...3, 0.07275586263375593]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.141
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[764...92, 0.0815032117082783]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.142
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[172...7, 0.09521902117976191]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.143
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[203...3, 0.07840655956848235]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.144
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[179...2, 0.06936677998455963]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.145
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[106...4, 0.12352044824015389]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.146
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[825...6, 0.10136821474687537]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.147
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[939...2, 0.18301118837343242]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.148
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[860...8, 0.07567457008384273]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.149
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[193...7, 0.11124559021815109]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.150
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...49, 0.0717492741733964]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.151
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[209...6, 0.19702682184190443]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.152
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...3, 0.09165485308530151]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.153
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...75, 0.1186674672555882]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.154
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[764...2, 0.08009622213001823]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.155
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[170...6, 0.10593054560794986]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.156
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[116...3, 0.04413068057480129]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.157
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[580...99, 0.1831007147803516]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.158
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[106...1, 0.12395818980011306]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.159
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[236...65, 0.0780752073538978]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.160
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[214...4, 0.07212612580501229]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.161
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[145...5, 0.04109166489541319]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.162
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[442...2, 0.19734073420266762]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.163
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...2, 0.10900302543905024]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.164
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...1, 0.14840276123165902]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.165
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[647...5, 0.18484279546282448]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.166
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[442...03, 0.0931646522129068]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.167
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[176...9, 0.11626471217318755]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.168
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[113...7, 0.14810136345560931]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.169
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[327..., 0.053609198343305554]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.170
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[119...5, 0.15094478115982687]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.171
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[442...6, 0.11639226282162345]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.172
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[742...3, 0.07700549444397248]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.173
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[829...3, 0.04112647335507399]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.174
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...5, 0.13849750764322197]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.175
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[172...6, 0.10163062306112383]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.176
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[181...1, 0.19192482330055968]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.177
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[172...5, 0.04610938706876428]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.178
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[171..., 0.053799070794272874]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.179
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[917...9, 0.12773497577720463]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.180
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[106...7, 0.23985286913312945]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.181
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...4, 0.07431360354532096]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.182
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[850...5, 0.08286437710347438]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.183
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[147...1, 0.06394156482786544]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.184
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[314...1, 0.20739104371124711]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.185
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...14, 0.1651697636463089]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.186
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[275...6, 0.05104620852033419]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.187
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139..., 0.049149361234869134]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.188
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[167...4, 0.12935839817337075]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.189
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[159...6, 0.09378287008691781]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.190
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[206...2, 0.08171587843656977]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.191
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...11, 0.1037140311003402]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.192
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[129...5, 0.05304718825613926]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.193
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[413...6, 0.06083632279715708]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.194
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[275...1, 0.14092618659023917]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.195
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...4, 0.17466589805633395]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.196
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139..., 0.061848810071378026]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.197
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[829...3, 0.15859091511672127]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.198
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[496...5, 0.06714887747512753]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.199
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...1, 0.11787762095468131]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.200
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[668...37, 0.1386999358465012]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.201
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[407...3, 0.09188743893535095]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.202
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[180...02, 0.1781639690750865]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.203
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[183...5, 0.08116486535710574]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.204
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[159...4, 0.15257663711809566]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.205
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[119..., 0.040142549713990665]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.206
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[102...4, 0.12315182487066823]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.207
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[275...3, 0.04794832481988728]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.208
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[546..., 0.060643191127980334]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.209
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[106...8, 0.05581005305337363]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.210
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[874...6, 0.08896786996464852]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.211
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...6, 0.07093197797114288]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.212
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[967...7, 0.16853828129942555]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.213
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[192...7, 0.08911885990204436]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.214
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[119...4, 0.04954965051650853]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.215
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[115...9, 0.09509451967363984]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.216
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[171...2, 0.06738544931100886]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.217
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[755..., 0.056660489883106235]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.218
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[117...6, 0.04327893225052043]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.219
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[202..., 0.044370190074037294]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.220
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[171...6, 0.04812933862591154]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.221
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[119...8, 0.14818056045891764]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.222
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[106...6, 0.06095594289031657]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.223
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[881...7, 0.05368677521609561]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.224
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...4, 0.11060288462166551]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.225
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[412...2, 0.37839969370612114]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.226
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[189...4, 0.03624677088172371]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.227
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...7, 0.04989578462841033]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.228
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...5, 0.17793327618193522]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.229
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[116...8, 0.05556799871766714]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.230
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[190...5, 0.20158586508892443]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.231
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...7, 0.38310669283905724]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.232
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[108...2, 0.10588097085745266]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.233
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[884...45, 0.0702489614367846]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.234
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[670..., 0.060762045115828237]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.235
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...3, 0.09610603590812186]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.236
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[205...1, 0.06773095625335986]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.237
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...9, 0.06730739808298125]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.238
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...7, 0.10647046062724871]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.239
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...1, 0.06316397011058475]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.240
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[477...7, 0.07243574501307859]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.241
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[151...3, 0.10193204507763162]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.242
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...3, 0.13677948883155708]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.243
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[157...35, 0.1272045009690864]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.244
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[680...6, 0.11066872677675295]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.245
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[147...5, 0.22203340308749947]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.246
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[162...22, 0.1667222201504365]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.247
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[167...1, 0.16106079831942843]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.248
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[898...2, 0.14626213895357892]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.249
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...3, 0.08635080063936093]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.250
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[309...6, 0.11036491047900882]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.251
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[795...3, 0.14333168976130078]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.252
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[102...1, 0.11582155807528138]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.253
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[149...8, 0.12450148545041877]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.254
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[170...905, 0.178008759282513]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.255
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953..., 0.054840126494580026]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.256
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[965...5, 0.08792409235668125]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.257
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[898...9, 0.25498267210309894]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.258
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[117...5, 0.09989976977513726]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.259
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[898...3, 0.04975759568257042]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.260
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[160...69, 0.1132081061536908]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.261
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[168...2, 0.11406477067081987]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.262
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[930...5, 0.06532695031371855]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.263
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[108...5, 0.04619928705262778]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.264
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...64, 0.1304010540254603]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.265
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[157...7, 0.09522941830318005]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.266
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[181...6, 0.08881699899878266]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.267
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[143...7, 0.18620089463929185]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.268
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[763...4309, 0.17722818559361]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.269
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[142...1, 0.03840109399581953]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.270
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953..., 0.051035425523980674]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.271
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[893...2, 0.08224820038511545]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.272
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[125...3, 0.03978193401582922]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.273
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...7, 0.19291173001439604]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.274
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[264...7, 0.22010960925602407]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.275
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[725...5, 0.06339197385654988]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.276
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[849...8, 0.07049215326062688]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.277
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[823...6, 0.05687424415995826]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.278
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[553...8, 0.05616530934556706]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.279
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[543...4, 0.05738584803514992]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.280
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[201...4, 0.17454527119729332]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.281
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[155...8, 0.08993464628353322]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.282
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...6, 0.04565861503325117]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.283
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[935...2, 0.14989899120033928]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.284
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[211...7, 0.07566660129528441]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.285
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[184...7, 0.04494066319555176]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.286
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[187...9, 0.03418848717662384]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.287
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[947...5, 0.28922411998551334]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.288
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[131...4, 0.07616107213917321]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.289
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[553..., 0.030873196502509474]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.290
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[152...9, 0.08899991195390602]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.291
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[134...8, 0.10382593774916883]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.292
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[543...9, 0.04079926962936581]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.293
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[898...1, 0.06150503395874796]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.294
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[205...57, 0.1097305837229462]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.295
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[216...5, 0.03613842186270673]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.296
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[170...9, 0.11002940500105526]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.297
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[482...86, 0.1359389138416931]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.298
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[166...7, 0.13652271542978023]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 172, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1761, in upsert
    points = models.PointsList(points=points, shard_key=shard_key_selector)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\main.py", line 211, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 299 validation errors for PointsList
points.0
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.1
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[175...8, 0.10329566353641552]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.2
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[190...5, 0.06819249567948178]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.3
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[200...4, 0.11247077602965758]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.4
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[173...2, 0.06649947029440001]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.5
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[189...1, 0.04672682712923368]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.6
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[553...7, 0.15025462763866623]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.7
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[257...7, 0.24632727593759102]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.8
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[141...56, 0.0331883455647193]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.9
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[125...8, 0.27919921149935356]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.10
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[818...72, 0.1284351357130517]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.11
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[132...9, 0.07577071603598277]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.12
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[586...9, 0.24405169260328616]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.13
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[569..., 0.060037667619368795]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.14
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[170..., 0.035173812704171296]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.15
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...6, 0.05516698070681387]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.16
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195..., 0.059845523572866044]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.17
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...3, 0.09227712640903377]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.18
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[132...2, 0.03661951239464721]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.19
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[407...4, 0.26960675648743426]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.20
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...97, 0.0392897669951577]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.21
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[107...8, 0.03812153828787342]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.22
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[209...16, 0.1733913647813023]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.23
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...39, 0.1406142768417878]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.24
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[162...2, 0.10378185171729785]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.25
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[210..., 0.057835997698644184]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.26
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[166...3, 0.04799815576958507]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.27
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[966...5, 0.08636234743923452]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.28
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...8, 0.38576249037029436]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.29
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[943...8, 0.03454445523374411]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.30
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[427...8, 0.08922171430504953]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.31
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[264...34, 0.0518052999389633]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.32
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...98, 0.0522776374181176]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.33
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[151...3, 0.14683903312465413]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.34
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[111...7, 0.15216567312241513]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.35
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[450...1, 0.08982808584698934]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.36
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[728...2, 0.08811343537910364]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.37
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[190...5, 0.03469243822289617]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.38
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[967...6, 0.05086232709519498]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.39
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[663..., 0.059186778111630346]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.40
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[264...9, 0.17683158557418546]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.41
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[111...2, 0.14716259079685418]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.42
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[105...23, 0.1800101654511365]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.43
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...4, 0.09358521881075796]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.44
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[173...5, 0.10701033477459206]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.45
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[898...43, 0.0787223427307013]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.46
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[212...6, 0.08279429023872673]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.47
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[108...4, 0.09612721559530099]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.48
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[101...8, 0.04885545888718632]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.49
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[181...9, 0.12235184645895247]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.50
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[184...7, 0.06642983270857969]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.51
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...5, 0.19629184545078515]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.52
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[159...5, 0.04352412845134309]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.53
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...55, 0.1200725952168715]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.54
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[192...1, 0.05468959228098191]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.55
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[135...6, 0.15830714612734503]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.56
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[516...89, 0.0856393930346617]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.57
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[193...6, 0.03763967372796752]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.58
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[160...3, 0.17317084699817367]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.59
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[203...9, 0.10109567060936632]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.60
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[170...8, 0.09598183104103354]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.61
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[116...3, 0.16924719788250073]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.62
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[516...3, 0.13797040462928606]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.63
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...4, 0.03743915709884237]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.64
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...9, 0.07699237651428228]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.65
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[105...7, 0.04662044526738168]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.66
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[287...8, 0.07241022134274401]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.67
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[122...5, 0.08230544418068238]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.68
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[112...5, 0.09679884582791955]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.69
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[206...1, 0.16358647950797972]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.70
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[206...4, 0.04829918779780324]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.71
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[516...06, 0.4011358196059224]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.72
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[651...2, 0.03677288833589235]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.73
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[264...5, 0.13442817640767613]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.74
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[516...1, 0.09903120151090834]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.75
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[553..., 0.036853423261235925]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.76
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[516...4, 0.05992111606639232]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.77
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[898..., 0.044191138926298126]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.78
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...1, 0.09925610473419201]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.79
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[172...5, 0.16597984261127297]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.80
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[226...17, 0.0888783111456736]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.81
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[134...6, 0.11853349632416055]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.82
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[106...5, 0.08630036679751076]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.83
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[147..., 0.055955509981945775]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.84
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[516...7, 0.04573375973278819]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.85
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[677...3, 0.07654532339863243]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.86
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[428...3, 0.04972515835248918]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.87
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[127...2, 0.11232966130529698]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.88
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[205...3, 0.03582364698080676]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.89
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[119...8, 0.13237968039277723]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.90
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[569...8, 0.10278184606024518]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.91
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[922...5, 0.12127482579871605]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.92
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[275...4, 0.20958844794716266]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.93
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[343...6, 0.04665793468294519]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.94
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...5, 0.11339977451691476]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.95
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[184...8, 0.07704114551245408]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.96
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[127...5, 0.10003140601411223]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.97
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[442...2, 0.04182457267046828]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.98
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[935...4, 0.15168282444293837]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.99
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[116...058, 0.256697289536564]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.100
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[959...97, 0.0713965612078632]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.101
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[116...8, 0.09432691823673976]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.102
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...7, 0.45415561138346217]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.103
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[214...6, 0.04329768856535607]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.104
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[176...26, 0.0397817572520503]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.105
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...42, 0.0553851653778846]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.106
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...6, 0.05179568227847638]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.107
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[586...6, 0.10658060442256774]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.108
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[137...5, 0.10253081512837492]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.109
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[156...507, 0.357333333989073]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.110
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[449...4, 0.06410962377643993]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.111
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[212...33, 0.2950087205071672]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.112
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...5, 0.12631396656270077]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.113
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953..., 0.050570452021031165]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.114
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[571...6, 0.06619426590568252]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.115
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[160...5, 0.15807142549736697]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.116
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[436...5, 0.06046756975649877]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.117
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...3, 0.10131950658900371]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.118
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[361...8, 0.08710363784886171]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.119
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[151...3, 0.06512856083608316]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.120
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[180...4, 0.22514801365116674]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.121
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...6, 0.06721307723796893]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.122
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...4, 0.09667319018456269]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.123
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...2, 0.03870720524560765]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.124
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[106...598, 0.046227234535051]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.125
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[156...33, 0.0750163278735583]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.126
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...3, 0.09737909503884953]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.127
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[933...06, 0.1055496430770916]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.128
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[105...5, 0.08944890942505909]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.129
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[520...1, 0.07374509724747873]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.130
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[411...8, 0.10407958227298432]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.131
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[135...36, 0.0868238230686486]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.132
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[794..., 0.045612477275872025]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.133
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[116..., 0.047810137604744236]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.134
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[436...7, 0.09707216837463305]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.135
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[176...82, 0.0790093516144898]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.136
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...2, 0.07128889126244367]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.137
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[172...6, 0.17563879263633458]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.138
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[102...41, 0.1812838690595436]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.139
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[442...7, 0.08062466836615362]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.140
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...3, 0.07275586263375593]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.141
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[764...92, 0.0815032117082783]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.142
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[172...7, 0.09521902117976191]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.143
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[203...3, 0.07840655956848235]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.144
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[179...2, 0.06936677998455963]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.145
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[106...4, 0.12352044824015389]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.146
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[825...6, 0.10136821474687537]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.147
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[939...2, 0.18301118837343242]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.148
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[860...8, 0.07567457008384273]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.149
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[193...7, 0.11124559021815109]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.150
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...49, 0.0717492741733964]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.151
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[209...6, 0.19702682184190443]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.152
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...3, 0.09165485308530151]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.153
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...75, 0.1186674672555882]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.154
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[764...2, 0.08009622213001823]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.155
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[170...6, 0.10593054560794986]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.156
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[116...3, 0.04413068057480129]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.157
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[580...99, 0.1831007147803516]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.158
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[106...1, 0.12395818980011306]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.159
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[236...65, 0.0780752073538978]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.160
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[214...4, 0.07212612580501229]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.161
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[145...5, 0.04109166489541319]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.162
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[442...2, 0.19734073420266762]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.163
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...2, 0.10900302543905024]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.164
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...1, 0.14840276123165902]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.165
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[647...5, 0.18484279546282448]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.166
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[442...03, 0.0931646522129068]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.167
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[176...9, 0.11626471217318755]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.168
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[113...7, 0.14810136345560931]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.169
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[327..., 0.053609198343305554]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.170
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[119...5, 0.15094478115982687]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.171
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[442...6, 0.11639226282162345]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.172
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[742...3, 0.07700549444397248]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.173
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[829...3, 0.04112647335507399]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.174
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...5, 0.13849750764322197]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.175
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[172...6, 0.10163062306112383]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.176
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[181...1, 0.19192482330055968]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.177
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[172...5, 0.04610938706876428]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.178
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[171..., 0.053799070794272874]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.179
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[917...9, 0.12773497577720463]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.180
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[106...7, 0.23985286913312945]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.181
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...4, 0.07431360354532096]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.182
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[850...5, 0.08286437710347438]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.183
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[147...1, 0.06394156482786544]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.184
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[314...1, 0.20739104371124711]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.185
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...14, 0.1651697636463089]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.186
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[275...6, 0.05104620852033419]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.187
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139..., 0.049149361234869134]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.188
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[167...4, 0.12935839817337075]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.189
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[159...6, 0.09378287008691781]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.190
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[206...2, 0.08171587843656977]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.191
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139...11, 0.1037140311003402]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.192
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[129...5, 0.05304718825613926]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.193
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[413...6, 0.06083632279715708]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.194
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[275...1, 0.14092618659023917]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.195
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...4, 0.17466589805633395]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.196
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[139..., 0.061848810071378026]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.197
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[829...3, 0.15859091511672127]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.198
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[496...5, 0.06714887747512753]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.199
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...1, 0.11787762095468131]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.200
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[668...37, 0.1386999358465012]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.201
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[407...3, 0.09188743893535095]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.202
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[180...02, 0.1781639690750865]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.203
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[183...5, 0.08116486535710574]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.204
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[159...4, 0.15257663711809566]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.205
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[119..., 0.040142549713990665]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.206
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[102...4, 0.12315182487066823]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.207
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[275...3, 0.04794832481988728]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.208
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[546..., 0.060643191127980334]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.209
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[106...8, 0.05581005305337363]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.210
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[874...6, 0.08896786996464852]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.211
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...6, 0.07093197797114288]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.212
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[967...7, 0.16853828129942555]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.213
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[192...7, 0.08911885990204436]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.214
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[119...4, 0.04954965051650853]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.215
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[115...9, 0.09509451967363984]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.216
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[171...2, 0.06738544931100886]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.217
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[755..., 0.056660489883106235]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.218
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[117...6, 0.04327893225052043]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.219
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[202..., 0.044370190074037294]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.220
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[171...6, 0.04812933862591154]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.221
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[119...8, 0.14818056045891764]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.222
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[106...6, 0.06095594289031657]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.223
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[881...7, 0.05368677521609561]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.224
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...4, 0.11060288462166551]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.225
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[412...2, 0.37839969370612114]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.226
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[189...4, 0.03624677088172371]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.227
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...7, 0.04989578462841033]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.228
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...5, 0.17793327618193522]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.229
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[116...8, 0.05556799871766714]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.230
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[190...5, 0.20158586508892443]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.231
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...7, 0.38310669283905724]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.232
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[108...2, 0.10588097085745266]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.233
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[884...45, 0.0702489614367846]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.234
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[670..., 0.060762045115828237]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.235
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...3, 0.09610603590812186]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.236
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[205...1, 0.06773095625335986]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.237
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...9, 0.06730739808298125]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.238
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[213...7, 0.10647046062724871]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.239
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...1, 0.06316397011058475]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.240
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[477...7, 0.07243574501307859]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.241
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[151...3, 0.10193204507763162]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.242
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...3, 0.13677948883155708]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.243
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[157...35, 0.1272045009690864]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.244
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[680...6, 0.11066872677675295]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.245
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[147...5, 0.22203340308749947]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.246
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[162...22, 0.1667222201504365]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.247
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[167...1, 0.16106079831942843]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.248
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[898...2, 0.14626213895357892]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.249
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...3, 0.08635080063936093]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.250
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[309...6, 0.11036491047900882]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.251
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[795...3, 0.14333168976130078]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.252
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[102...1, 0.11582155807528138]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.253
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[149...8, 0.12450148545041877]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.254
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[170...905, 0.178008759282513]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.255
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953..., 0.054840126494580026]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.256
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[965...5, 0.08792409235668125]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.257
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[898...9, 0.25498267210309894]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.258
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[117...5, 0.09989976977513726]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.259
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[898...3, 0.04975759568257042]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.260
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[160...69, 0.1132081061536908]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.261
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[168...2, 0.11406477067081987]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.262
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[930...5, 0.06532695031371855]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.263
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[108...5, 0.04619928705262778]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.264
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...64, 0.1304010540254603]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.265
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[157...7, 0.09522941830318005]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.266
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[181...6, 0.08881699899878266]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.267
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[143...7, 0.18620089463929185]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.268
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[763...4309, 0.17722818559361]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.269
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[142...1, 0.03840109399581953]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.270
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953..., 0.051035425523980674]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.271
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[893...2, 0.08224820038511545]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.272
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[125...3, 0.03978193401582922]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.273
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[195...7, 0.19291173001439604]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.274
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[264...7, 0.22010960925602407]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.275
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[725...5, 0.06339197385654988]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.276
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[849...8, 0.07049215326062688]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.277
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[823...6, 0.05687424415995826]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.278
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[553...8, 0.05616530934556706]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.279
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[543...4, 0.05738584803514992]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.280
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[201...4, 0.17454527119729332]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.281
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[155...8, 0.08993464628353322]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.282
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[953...6, 0.04565861503325117]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.283
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[935...2, 0.14989899120033928]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.284
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[211...7, 0.07566660129528441]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.285
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[184...7, 0.04494066319555176]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.286
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[187...9, 0.03418848717662384]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.287
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[947...5, 0.28922411998551334]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.288
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[131...4, 0.07616107213917321]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.289
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[553..., 0.030873196502509474]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.290
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[152...9, 0.08899991195390602]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.291
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[134...8, 0.10382593774916883]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.292
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[543...9, 0.04079926962936581]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.293
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[898...1, 0.06150503395874796]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.294
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[205...57, 0.1097305837229462]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.295
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[216...5, 0.03613842186270673]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.296
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[170...9, 0.11002940500105526]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.297
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[482...86, 0.1359389138416931]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
points.298
  Input should be a valid dictionary or instance of PointStruct [type=model_type, input_value=SparseVector(indices=[166...7, 0.13652271542978023]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: type() takes 1 or 3 arguments
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 170, in index_documents
    logging.info(type(sparse_points,len(sparse_points)))
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: type() takes 1 or 3 arguments
Received file: LSTM.pdf and query: lstms ?
Received file: LSTM.pdf and query: lstms ?
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 4 validation errors for PointStruct
id
  Field required [type=missing, input_value={'indices': [1208535885, ...2, 0.17926642546791496]}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
vector
  Field required [type=missing, input_value={'indices': [1208535885, ...2, 0.17926642546791496]}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
indices
  Extra inputs are not permitted [type=extra_forbidden, input_value=[1208535885, 1717818563, ..., 1936576414, 759283944], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
values
  Extra inputs are not permitted [type=extra_forbidden, input_value=[0.09527837900878776, 0.1...92, 0.17926642546791496], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 166, in index_documents
    sparse_point = create_sparse_vector(doc, sparse_embedding_model)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 102, in create_sparse_vector
    return models.PointStruct(
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\main.py", line 211, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 4 validation errors for PointStruct
id
  Field required [type=missing, input_value={'indices': [1208535885, ...2, 0.17926642546791496]}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
vector
  Field required [type=missing, input_value={'indices': [1208535885, ...2, 0.17926642546791496]}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
indices
  Extra inputs are not permitted [type=extra_forbidden, input_value=[1208535885, 1717818563, ..., 1936576414, 759283944], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
values
  Extra inputs are not permitted [type=extra_forbidden, input_value=[0.09527837900878776, 0.1...92, 0.17926642546791496], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: too many values to unpack (expected 1)
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 166, in index_documents
    sparse_vector, = create_sparse_vector(doc, sparse_embedding_model)
    ^^^^^^^^^^^^^^
ValueError: too many values to unpack (expected 1)
Received file: LSTM.pdf and query: lstms ?
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between sparse and regular vectors failed"},"time":0.01848919}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 174, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between sparse and regular vectors failed"},"time":0.01848919}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 1 validation error for SparseVector
indices
  Field required [type=missing, input_value={'values': [0.09527837900...2, 0.17926642546791496]}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 172, in index_documents
    sparse_point = create_sparse_vector(doc, sparse_embedding_model)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 107, in create_sparse_vector
    return SparseVector(
           ^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\main.py", line 211, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 1 validation error for SparseVector
indices
  Field required [type=missing, input_value={'values': [0.09527837900...2, 0.17926642546791496]}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 1 validation error for PointStruct
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 175, in index_documents
    hybrid_point = models.PointStruct(
                   ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\main.py", line 211, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 1 validation error for PointStruct
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 1 validation error for PointStruct
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 175, in index_documents
    hybrid_point = models.PointStruct(
                   ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\main.py", line 211, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 1 validation error for PointStruct
sparse_vector
  Extra inputs are not permitted [type=extra_forbidden, input_value=SparseVector(indices=[120...2, 0.17926642546791496]), input_type=SparseVector]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: 4 validation errors for PointStruct
id
  Field required [type=missing, input_value={'indices': [1208535885, ...2, 0.17926642546791496]}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
vector
  Field required [type=missing, input_value={'indices': [1208535885, ...2, 0.17926642546791496]}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
indices
  Extra inputs are not permitted [type=extra_forbidden, input_value=[1208535885, 1717818563, ..., 1936576414, 759283944], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
values
  Extra inputs are not permitted [type=extra_forbidden, input_value=[0.09527837900878776, 0.1...92, 0.17926642546791496], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 175, in index_documents
    sparse_point = models.PointStruct(
                   ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\main.py", line 211, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 4 validation errors for PointStruct
id
  Field required [type=missing, input_value={'indices': [1208535885, ...2, 0.17926642546791496]}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
vector
  Field required [type=missing, input_value={'indices': [1208535885, ...2, 0.17926642546791496]}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
indices
  Extra inputs are not permitted [type=extra_forbidden, input_value=[1208535885, 1717818563, ..., 1936576414, 759283944], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
values
  Extra inputs are not permitted [type=extra_forbidden, input_value=[0.09527837900878776, 0.1...92, 0.17926642546791496], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Received file: LSTM.pdf and query: Lstmss ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between sparse and regular vectors failed"},"time":0.010832087}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 175, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between sparse and regular vectors failed"},"time":0.010832087}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: [WinError 10061] No connection could be made because the target machine actively refused it
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 72, in map_httpcore_exceptions
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 236, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 216, in handle_request
    raise exc from None
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 196, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 99, in handle_request
    raise exc
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 76, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 122, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_backends\sync.py", line 205, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 106, in send_inner
    response = self._client.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 926, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 954, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 991, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 1027, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 235, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 89, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 140, in index_documents
    client.delete_collection(collection_name=sparse_collection)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 2025, in delete_collection
    return self._client.delete_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2542, in delete_collection
    result: Optional[bool] = self.http.collections_api.delete_collection(
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 1241, in delete_collection
    return self._build_for_delete_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 259, in _build_for_delete_collection
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 96, in send
    response = self.middleware(request, self.send_inner)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 205, in __call__
    return call_next(request)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 108, in send_inner
    raise ResponseHandlingException(e)
qdrant_client.http.exceptions.ResponseHandlingException: [WinError 10061] No connection could be made because the target machine actively refused it
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: [WinError 10061] No connection could be made because the target machine actively refused it
Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 72, in map_httpcore_exceptions
    yield
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 236, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 216, in handle_request
    raise exc from None
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection_pool.py", line 196, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 99, in handle_request
    raise exc
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 76, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_sync\connection.py", line 122, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_backends\sync.py", line 205, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 106, in send_inner
    response = self._client.send(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 926, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 954, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 991, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_client.py", line 1027, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 235, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\harsh\miniconda3\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(value)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\httpx\_transports\default.py", line 89, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [WinError 10061] No connection could be made because the target machine actively refused it

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 140, in index_documents
    client.delete_collection(collection_name=sparse_collection)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 2025, in delete_collection
    return self._client.delete_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2542, in delete_collection
    result: Optional[bool] = self.http.collections_api.delete_collection(
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 1241, in delete_collection
    return self._build_for_delete_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 259, in _build_for_delete_collection
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 96, in send
    response = self.middleware(request, self.send_inner)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 205, in __call__
    return call_next(request)
           ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 108, in send_inner
    raise ResponseHandlingException(e)
qdrant_client.http.exceptions.ResponseHandlingException: [WinError 10061] No connection could be made because the target machine actively refused it
Received file: LSTM.pdf and query: lstms ?
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between multi and regular vectors failed"},"time":0.071394031}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 185, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between multi and regular vectors failed"},"time":0.071394031}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between multi and regular vectors failed"},"time":0.043556684}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 189, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between multi and regular vectors failed"},"time":0.043556684}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between multi and regular vectors failed"},"time":0.004389604}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 178, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between multi and regular vectors failed"},"time":0.004389604}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between multi and regular vectors failed"},"time":0.002593092}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 178, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between multi and regular vectors failed"},"time":0.002593092}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between multi and regular vectors failed"},"time":0.003152029}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 175, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between multi and regular vectors failed"},"time":0.003152029}'
Received file: LSTM.pdf and query: lstms ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between multi and regular vectors failed"},"time":0.003008312}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 175, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Conversion between multi and regular vectors failed"},"time":0.003008312}'
Received file: LSTM.pdf and query: lstms ?
Received file: LSTM.pdf and query: lstms ?

Received file: LSTM.pdf and query: lstms ?

Received file: LSTM.pdf and query: lstms ?

Received file: LSTM.pdf and query: lstms ?

Received file: LSTM.pdf and query: lstms ?

Received file: LSTM.pdf and query: lstms ?

Received file: LSTM.pdf and query: lstms ?

An error occurred while processing RAG pipeline: Unexpected Response: 404 (Not Found)
Raw response content:
b'{"status":{"error":"Not found: Collection `rag_hybrid` doesn\'t exist!"},"time":0.000326529}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 148, in index_documents
    collection_info = client.get_collection(collection_name=hybrid_collection)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1944, in get_collection
    return self._client.get_collection(collection_name=collection_name, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2436, in get_collection
    result: Optional[types.CollectionInfo] = self.http.collections_api.get_collection(
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 1314, in get_collection
    return self._build_for_get_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 397, in _build_for_get_collection
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 404 (Not Found)
Raw response content:
b'{"status":{"error":"Not found: Collection `rag_hybrid` doesn\'t exist!"},"time":0.000326529}'
Received file: LSTM.pdf and query: lstms ?

An error occurred while processing RAG pipeline: Unexpected Response: 404 (Not Found)
Raw response content:
b'{"status":{"error":"Not found: Collection `rag_hybrid` doesn\'t exist!"},"time":0.000011332}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 142, in index_documents
    collection_info = client.get_collection(collection_name=hybrid_collection)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1944, in get_collection
    return self._client.get_collection(collection_name=collection_name, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 2436, in get_collection
    result: Optional[types.CollectionInfo] = self.http.collections_api.get_collection(
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 1314, in get_collection
    return self._build_for_get_collection(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\collections_api.py", line 397, in _build_for_get_collection
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 404 (Not Found)
Raw response content:
b'{"status":{"error":"Not found: Collection `rag_hybrid` doesn\'t exist!"},"time":0.000011332}'
Received file: LSTM.pdf and query: lstms ?

An error occurred while processing RAG pipeline: Unexpected Response: 404 (Not Found)
Raw response content:
b'{"status":{"error":"Not found: Collection `rag_hybrid` doesn\'t exist!"},"time":0.000156908}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 24, in ragas_endpoint
    index_documents(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\indexing.py", line 163, in index_documents
    client.upsert(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 1364, in upsert
    return self._client.upsert(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 1766, in upsert
    http_result = self.openapi_client.points_api.upsert_points(
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1667, in upsert_points
    return self._build_for_upsert_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 852, in _build_for_upsert_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 404 (Not Found)
Raw response content:
b'{"status":{"error":"Not found: Collection `rag_hybrid` doesn\'t exist!"},"time":0.000156908}'
Received file: LSTM.pdf and query: lstms ?

Received file: LSTM.pdf and query: Lstms ?
An error occurred while processing RAG pipeline: 2 validation errors for SparseVectorParams
indicies
  Extra inputs are not permitted [type=extra_forbidden, input_value=[1282777640], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
values
  Extra inputs are not permitted [type=extra_forbidden, input_value=[0.6023485623161333], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 26, in ragas_endpoint
    hybrid_search(query)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 37, in hybrid_search
    query = models.SparseVectorParams(indicies = sparse_query.indices.tolist(),
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\main.py", line 211, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 2 validation errors for SparseVectorParams
indicies
  Extra inputs are not permitted [type=extra_forbidden, input_value=[1282777640], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
values
  Extra inputs are not permitted [type=extra_forbidden, input_value=[0.6023485623161333], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Received file: LSTM.pdf and query: Lstms ?
An error occurred while processing RAG pipeline: 2 validation errors for SparseVectorParams
indicies
  Extra inputs are not permitted [type=extra_forbidden, input_value=[1282777640], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
values
  Extra inputs are not permitted [type=extra_forbidden, input_value=[0.6023485623161333], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 27, in ragas_endpoint
    hybrid_search(query)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 37, in hybrid_search
    query = models.SparseVectorParams(indicies = sparse_query.indices.tolist(),
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\main.py", line 211, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 2 validation errors for SparseVectorParams
indicies
  Extra inputs are not permitted [type=extra_forbidden, input_value=[1282777640], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
values
  Extra inputs are not permitted [type=extra_forbidden, input_value=[0.6023485623161333], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Received file: LSTM.pdf and query: Lstms ?
An error occurred while processing RAG pipeline: 2 validation errors for SparseVectorParams
indices
  Extra inputs are not permitted [type=extra_forbidden, input_value=[1282777640], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
values
  Extra inputs are not permitted [type=extra_forbidden, input_value=[0.6023485623161333], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 26, in ragas_endpoint
    hybrid_search(query)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 37, in hybrid_search
    query = models.SparseVectorParams(indices = sparse_query.indices.tolist(),
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\pydantic\main.py", line 211, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 2 validation errors for SparseVectorParams
indices
  Extra inputs are not permitted [type=extra_forbidden, input_value=[1282777640], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
values
  Extra inputs are not permitted [type=extra_forbidden, input_value=[0.6023485623161333], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/extra_forbidden
Received file: LSTM.pdf and query: Lstms ?
Received file: LSTM.pdf and query: Lstms ?
An error occurred while processing RAG pipeline: 'list' object has no attribute 'indices'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 26, in ragas_endpoint
    hybrid_search(query)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 37, in hybrid_search
    query = models.SparseVectorParams(indices = sparse_query.indices.tolist(),
                                                ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'list' object has no attribute 'indices'
Received file: LSTM.pdf and query: Lstms ?
Received file: LSTM.pdf and query: What are Lstms and How do they work?
Received file: LSTM.pdf and query: What are Lstms and How do they work?
Received file: LSTM.pdf and query: What are Lstms and How do they work?
Received file: LSTM.pdf and query: What are Lstms and How do they work?
Received file: LSTM.pdf and query: What are Lstms and how do they work ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Bad request: A query is needed to merge the prefetches. Can\'t have prefetches without defining a query."},"time":0.04887025}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 26, in ragas_endpoint
    hybrid_search(query)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 37, in hybrid_search
    sparse_results = client.query_points(
                     ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 560, in query_points
    return self._client.query_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 702, in query_points
    query_result = self.http.points_api.query_points(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1480, in query_points
    return self._build_for_query_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 478, in _build_for_query_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Bad request: A query is needed to merge the prefetches. Can\'t have prefetches without defining a query."},"time":0.04887025}'
Received file: LSTM.pdf and query: What are Lstms and how do they work ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Bad request: A query is needed to merge the prefetches. Can\'t have prefetches without defining a query."},"time":0.000967981}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 26, in ragas_endpoint
    hybrid_search(query)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 37, in hybrid_search
    sparse_results = client.query_points(
                     ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 560, in query_points
    return self._client.query_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 702, in query_points
    query_result = self.http.points_api.query_points(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1480, in query_points
    return self._build_for_query_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 478, in _build_for_query_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Bad request: A query is needed to merge the prefetches. Can\'t have prefetches without defining a query."},"time":0.000967981}'
Received file: LSTM.pdf and query: What are Lstms and how do they work ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Bad request: A query is needed to merge the prefetches. Can\'t have prefetches without defining a query."},"time":0.010848789}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 26, in ragas_endpoint
    answer_query(query)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 30, in answer_query
    results = hybrid_search(query)
              ^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 37, in hybrid_search
    sparse_results = client.query_points(
                     ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 560, in query_points
    return self._client.query_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 702, in query_points
    query_result = self.http.points_api.query_points(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1480, in query_points
    return self._build_for_query_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 478, in _build_for_query_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Bad request: A query is needed to merge the prefetches. Can\'t have prefetches without defining a query."},"time":0.010848789}'
Received file: LSTM.pdf and query: What are Lstms and how do they work ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Bad request: A query is needed to merge the prefetches. Can\'t have prefetches without defining a query."},"time":0.001219879}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 26, in ragas_endpoint
    answer_query(query)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 30, in answer_query
    results = hybrid_search(query)
              ^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 37, in hybrid_search
    sparse_results = client.query_points(
                     ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 560, in query_points
    return self._client.query_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 702, in query_points
    query_result = self.http.points_api.query_points(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1480, in query_points
    return self._build_for_query_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 478, in _build_for_query_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Bad request: A query is needed to merge the prefetches. Can\'t have prefetches without defining a query."},"time":0.001219879}'
Received file: LSTM.pdf and query: What are Lstms and how do they work ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Vector params for  are not specified in config"},"time":0.02684162}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 26, in ragas_endpoint
    answer_query(query)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 30, in answer_query
    results = hybrid_search(query)
              ^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 39, in hybrid_search
    sparse_results = client.query_points(
                     ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 560, in query_points
    return self._client.query_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 702, in query_points
    query_result = self.http.points_api.query_points(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1480, in query_points
    return self._build_for_query_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 478, in _build_for_query_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Vector params for  are not specified in config"},"time":0.02684162}'
Received file: LSTM.pdf and query: What are Lstms and how do they work ?
An error occurred while processing RAG pipeline: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Vector params for  are not specified in config"},"time":0.001412388}'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 26, in ragas_endpoint
    answer_query(query)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 30, in answer_query
    results = hybrid_search(query)
              ^^^^^^^^^^^^^^^^^^^^
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\retriever.py", line 39, in hybrid_search
    sparse_results = client.query_points(
                     ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_client.py", line 560, in query_points
    return self._client.query_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\qdrant_remote.py", line 702, in query_points
    query_result = self.http.points_api.query_points(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 1480, in query_points
    return self._build_for_query_points(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api\points_api.py", line 478, in _build_for_query_points
    return self.api_client.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 79, in request
    return self.send(request, type_)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\qdrant_client\http\api_client.py", line 102, in send
    raise UnexpectedResponse.for_response(response)
qdrant_client.http.exceptions.UnexpectedResponse: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Wrong input: Vector params for  are not specified in config"},"time":0.001412388}'
Received file: LSTM.pdf and query: What are Lstms and how do they work ?
An error occurred while processing RAG pipeline: 'answer'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 26, in ragas_endpoint
    answer_query(query)
  File "D:\Projects\RAG\rag_pipeline\Qdrant_hybrid_rag\generator.py", line 37, in answer_query
    response = llm_chain.invoke({"question": query, "context":combined_context })["answer"]
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
KeyError: 'answer'
Received file: LSTM.pdf and query: What are Lstms and how do they work ?
Received file: LSTM.pdf and query: What are Lstms and how do they work ?
Received file: LSTM.pdf and query: What are Lstms and how do they work ?
An error occurred while processing RAG pipeline: 'SentenceTransformer' object has no attribute 'aembed_documents'
Traceback (most recent call last):
  File "D:\Projects\RAG\backend\server.py", line 28, in ragas_endpoint
    generate_testset(temp_file_path)
  File "D:\Projects\RAG\rag_pipeline\evaluator.py", line 23, in generate_testset
    testset = generator.generate_with_langchain_docs(pages, 10, distributions)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\ragas\testset\generator.py", line 206, in generate_with_langchain_docs
    self.docstore.add_documents(
  File "C:\Users\harsh\miniconda3\Lib\site-packages\ragas\testset\docstore.py", line 214, in add_documents
    self.add_nodes(nodes, show_progress=show_progress)
  File "C:\Users\harsh\miniconda3\Lib\site-packages\ragas\testset\docstore.py", line 251, in add_nodes
    results = executor.results()
              ^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\ragas\executor.py", line 116, in results
    results = asyncio.run(_aresults())
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\nest_asyncio.py", line 30, in run
    return loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\nest_asyncio.py", line 98, in run_until_complete
    return f.result()
           ^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\asyncio\futures.py", line 203, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "C:\Users\harsh\miniconda3\Lib\asyncio\tasks.py", line 314, in __step_run_and_handle_result
    result = coro.send(None)
             ^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\ragas\executor.py", line 111, in _aresults
    r = await future
        ^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\asyncio\tasks.py", line 631, in _wait_for_one
    return f.result()  # May raise f.exception().
           ^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\asyncio\futures.py", line 203, in result
    raise self._exception.with_traceback(self._exception_tb)
  File "C:\Users\harsh\miniconda3\Lib\asyncio\tasks.py", line 314, in __step_run_and_handle_result
    result = coro.send(None)
             ^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\ragas\executor.py", line 34, in sema_coro
    return await coro
           ^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\ragas\executor.py", line 60, in wrapped_callable_async
    raise e
  File "C:\Users\harsh\miniconda3\Lib\site-packages\ragas\executor.py", line 54, in wrapped_callable_async
    result = await callable(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\ragas\embeddings\base.py", line 26, in embed_text
    embs = await self.embed_texts([text], is_async=is_async)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\ragas\embeddings\base.py", line 36, in embed_texts
    return await aembed_documents_with_retry(texts)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\tenacity\asyncio\__init__.py", line 189, in async_wrapped
    return await copy(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\tenacity\asyncio\__init__.py", line 111, in __call__
    do = await self.iter(retry_state=retry_state)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\tenacity\asyncio\__init__.py", line 153, in iter
    result = await action(retry_state)
             ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\tenacity\_utils.py", line 99, in inner
    return call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\tenacity\__init__.py", line 418, in exc_check
    raise retry_exc.reraise()
          ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\tenacity\__init__.py", line 185, in reraise
    raise self.last_attempt.result()
          ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\concurrent\futures\_base.py", line 449, in result
    return self.__get_result()
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\concurrent\futures\_base.py", line 401, in __get_result
    raise self._exception
  File "C:\Users\harsh\miniconda3\Lib\site-packages\tenacity\asyncio\__init__.py", line 114, in __call__
    result = await fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\ragas\embeddings\base.py", line 67, in aembed_documents
    return await self.embeddings.aembed_documents(texts)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\harsh\miniconda3\Lib\site-packages\torch\nn\modules\module.py", line 1729, in __getattr__
    raise AttributeError(f"'{type(self).__name__}' object has no attribute '{name}'")
AttributeError: 'SentenceTransformer' object has no attribute 'aembed_documents'
